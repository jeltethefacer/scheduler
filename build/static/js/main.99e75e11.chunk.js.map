{"version":3,"sources":["utils/axiosInstance.js","utils/config.js","utils/errorCodeFormatting.js","components/LoginForm.js","actions/login.js","actions/user.js","components/UserInformation.js","actions/role.js","components/listComponents/UserList.js","actions/moderator.js","actions/timeslotCategorie.js","components/TimeslotCatogorieForm.js","components/AddUser.js","components/listComponents/RoleList.js","components/AddRole.js","components/listComponents/TimeslotCategorieList.js","components/Moderator.js","components/Logout.js","actions/timeslot.js","utils/timeFormat.js","utils/checkRole.js","components/TimeslotForm.js","components/TimeslotCards.js","components/listComponents/TimeslotList.js","actions/l18n.js","components/Navbar.js","components/FrontPage.js","components/forms/MultipleTimeslot.js","App.js","reducers/login.js","reducers/role.js","reducers/user.js","reducers/moderator.js","reducers/timeslot.js","reducers/timeslotCategorie.js","reducers/l18n.js","index.js"],"names":["tokenRequest","token","Axios","create","baseURL","headers","errorCodeFormatting","errorCode","errorText","errorInfo","Alert","severity","LoginForm","dispatch","useDispatch","useSelector","state","login","history","useHistory","useState","email","setEmail","password","setPassword","onSubmit","event","preventDefault","a","post","user","userData","data","localStorage","setItem","type","response","status","push","value","onChange","target","getUserInformation","get","console","log","UserInformation","userInformation","roles","frontName","lastName","roleListElements","map","role","key","id","abreviation","description","mapRoles","getRoleList","rolesList","UserList","users","moderator","useEffect","userList","getUsers","findRoleById","rolesArray","roleId","filter","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","onClick","userId","deleteUser","className","toggleRoleRespone","roleEntity","userEntity","toggleRole","chairman","toggleChairmanResponse","erroCode","toggleChairman","getTimeslotCategorieList","timeslotCategorie","categoriesEntity","timeslotCategories","TimeslotCategorieForm","props","timeslotCategorieState","timeslotCategorieId","match","params","undefined","categorieId","categorieEntity","fetchOneTimeslotCategorie","setApiCall","defaultState","apiCall","title","setTitle","cancelLength","setCancelLength","subscribeLength","setSubscribeLength","succes","changeTimeslotCategorie","addTimeslotCategorie","min","Number","AddUser","setFrontName","setLastName","addUser","RoleList","onDoubleClick","setAbreviation","setDescription","addRole","Button","variant","color","TimeslotCategorieList","timeslot","mapTimeslotCategories","Moderator","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","AddRole","Logout","clear","addTimeslot","startTime","endTime","maxPeople","timeslotData","setTimeout","pad","number","formatDateForCard","startDate","endDate","months","toDateString","getHours","getMinutes","getMonth","getDate","getFullYear","date","toTimeString","checkRole","userRoles","checkTimeslotCategorie","categorieList","index","TimeslotForm","successTimeslot","Date","setStarttime","setEndTime","setMaxPeople","roleSelection","setRoleSelection","categorieSelection","setCategorieSelection","startTimeDateString","startTimeTimeString","endTimeDateString","endTimeTimeString","chooseRoles","length","success","successFormatting","dateSplitted","split","tempDate","getTime","setFullYear","setMonth","setDate","timeSplitted","setHours","setMinutes","setSeconds","roleToSelect","includes","concat","multiple","TimeslotCards","timeslots","categories","roleList","sortingOption","classes","makeStyles","theme","root","width","height","useStyles","sorted","sortOption","sort","firstTimeslot","secondTimeslot","subscribed","sortTimeslot","Grid","container","direction","justify","alignItems","startTimeDate","endTimeDate","Card","CardHeader","subheader","CardContent","spacing","item","xs","md","Typography","List","dense","ListItem","ListItemText","primary","component","CardActions","ButtonGroup","timeslotId","unSubscribe","subscribeTimeslot","deleteTimeslot","TimeslotList","timeslotStatus","timeslotsData","getTimeslots","sortOptions","name","setSortOption","groupBy","reduce","rv","x","groupedTimeslots","option","Object","keys","categorie","changeLanguage","language","Navbar","loginInformation","translation","useContext","languageContext","l18n","to","home","loggedIn","logout","loginOrLogout","otherLanguage","moderatorLink","createTimeslot","timeslotLink","createMultipleTimeslot","multipleTimeslotLink","FrontPage","userTimeslots","getUserTimeslots","MultipleTimeslotForm","daySelection","setDaySelection","weekSelection","setWeekSelection","dayArray","currentDate","getDay","setMilliseconds","forEach","week","day","thisDate","startTimeTemp","endTimeTemp","selectedDay","selectedWeek","beginWeek","endweek","getWeekString","createContext","App","getItem","verifyToken","pending","Provider","translations","path","render","MultipleTimeslot","loginReducer","action","error","errorMessage","roleReducer","userReducer","moderatorReducer","newState","timeslotReducer","newTimeslots","newTimeslotsDeleted","timeslotCategorieReducer","newTimeslotCategories","l18nReducer","store","createStore","combineReducers","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.99e75e11.chunk.js","sourcesContent":["import Axios from \"axios\"\r\nimport { config } from \"../utils/config\"\r\n\r\nconst tokenRequest = (token) =>{\r\n     return Axios.create({\r\n        baseURL: `${config().url}`,\r\n        headers: {\r\n            \"authorization\": `bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nexport default tokenRequest","export const config = () => {\r\n    if(process.env.NODE_ENV === \"development\") {\r\n        return {\r\n            url : \"http://localhost:3001\"\r\n        }\r\n    }\r\n    return {\r\n        url: \"\"\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {Alert} from '@material-ui/lab';\r\n\r\nexport const errorCodeFormatting = (errorCode, errorText, errorInfo = \"\") => {\r\n    if(!errorCode || errorCode === \"\") {\r\n        return;\r\n    }\r\n    return <Alert severity=\"error\">{errorText(errorCode, errorInfo)}</Alert>\r\n}","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { login } from \"../actions/login\"\r\nimport { useHistory } from 'react-router';\r\nimport { errorCodeFormatting } from '../utils/errorCodeFormatting';\r\n\r\nfunction LoginForm() {\r\n    const dispatch = useDispatch()\r\n\r\n    const errorCode = useSelector(state => state.login.errorCode)\r\n\r\n    const history = useHistory()\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const handleEmailChange = (event) => {\r\n        setEmail(event.target.value)\r\n    }\r\n\r\n    const handlePasswordChange = (event) => {\r\n        setPassword(event.target.value)\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        dispatch(login(email, password))\r\n        history.push(\"/\")\r\n        setPassword(\"\")\r\n        setEmail(\"\")\r\n    }\r\n\r\n\r\n    const errorText = (errorCode) => {\r\n        switch (errorCode) {\r\n            case \"INVALID_EMAIL_OR_PASS\":\r\n                return \"The email or password appear to be incorrect.\"\r\n            default:\r\n                return \"\"\r\n        }\r\n    }\r\n\r\n \r\n    return (\r\n        <div>\r\n            {errorCodeFormatting(errorCode, errorText)}\r\n            < form onSubmit={handleSubmit} >\r\n            email: <input type=\"email\" value={email} onChange={handleEmailChange} /> <br />\r\n      password: <input type=\"password\" value={password} onChange={handlePasswordChange} /><br />\r\n            <input type=\"submit\" />\r\n        </form >\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm","import tokenRequest from \"../utils/axiosInstance\"\r\nconst baseUrl = '/api/user/login'\r\n\r\nexport const login = (email, password) => {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await tokenRequest().post(baseUrl, { email: email, password: password })\r\n            const userData = user.data\r\n            localStorage.setItem(\"token\", userData.token)\r\n            dispatch({\r\n                type: \"LOGIN\",\r\n                data: {\r\n                    email: userData.email,\r\n                    token: userData.token\r\n                }\r\n            })\r\n        } catch (error) {\r\n            switch (error.response.status) {\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"LOGIN_ERROR\",\r\n                        data: {\r\n                            errorCode: error.response.data.errorCode\r\n                        }\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const verifyToken = (token) => {\r\n\r\n    return async dispatch => {\r\n        try {\r\n            await tokenRequest(token).post(`${baseUrl}/verify`)\r\n\r\n            dispatch({\r\n                type: \"LOGIN\",\r\n                data: {\r\n                    token: token\r\n                }\r\n            })\r\n        } catch (error) {\r\n            switch (error.response.status) {\r\n                case 401:\r\n                    localStorage.clear()\r\n                    dispatch({\r\n                        type: \"NO_TOKEN\"\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    localStorage.clear()\r\n    return {\r\n        type: \"LOGOUT\"\r\n    }\r\n}\r\n\r\nexport const noTokenStorage = () => {\r\n    console.log(\"no storage\")\r\n    return {\r\n        type: \"NO_TOKEN\"\r\n    }\r\n}","import tokenRequest from \"../utils/axiosInstance\"\r\n\r\nexport const getUserInformation = (token) => {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await tokenRequest(token).get(\"/api/user\")\r\n\r\n            const userData = user.data\r\n            \r\n            dispatch({\r\n                type: \"USER_INFORMATION\",\r\n                data: {\r\n                    user: userData\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error.response.status)\r\n            switch(error.response.status) {\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"INVALID_TOKEN\"\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n                }\r\n        }\r\n    }\r\n}","import React from \"react\"\r\n\r\n\r\nconst UserInformation = ({userInformation}) => {\r\n    const user  = userInformation.user\r\n    const roles = userInformation.roles\r\n\r\n    const mapRoles = (roles) => {\r\n\r\n        const roleListElements = roles.map((role) =>\r\n            <li key={role.id} >{role.abreviation} ({role.description})</li>\r\n        )\r\n\r\n        return <ul>{roleListElements}</ul>\r\n    }\r\n\r\n\r\n    //renders only if there is userinformation\r\n    if (userInformation) {\r\n        return (\r\n            <div>\r\n                Email: {user.email}\r\n                <hr />\r\n                Hallo {user.frontName} {user.lastName},\r\n                <br />\r\n\r\n                je rollen zijn\r\n                {roles ? mapRoles(roles) : \" loading\"}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    //default return\r\n    return (\r\n        <div>Loading....</div>\r\n    )\r\n}\r\n\r\nexport default UserInformation","import tokenRequest from \"../utils/axiosInstance\"\r\n\r\n\r\nconst baseUrl = `/api/role`\r\n\r\n\r\nexport const getRoleList = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const roles = await tokenRequest().get(baseUrl)\r\n\r\n            const rolesList = roles.data\r\n            dispatch({\r\n                type: \"ROLE_LIST\",\r\n                data: {\r\n                    roles: rolesList\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error.response.status)\r\n            switch (error.response.status) {\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"INVALID_TOKEN\"\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getUsers, deleteUser, toggleRole, toggleChairman } from \"../../actions/moderator\"\r\nimport { getRoleList } from \"../../actions/role\"\r\nimport \"../../css/dropdown.css\"\r\nimport { TableContainer, Table, TableHead, TableRow, TableCell, TableBody } from '@material-ui/core';\r\n\r\n\r\nfunction UserList() {\r\n    const dispatch = useDispatch()\r\n\r\n    const users = useSelector(state => state.moderator)\r\n    const token = useSelector(state => state.login.token)\r\n    const roles = useSelector(state => state.roles)\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            dispatch(getUsers(token))\r\n            dispatch(getRoleList())\r\n        }\r\n    }, [dispatch, token])\r\n\r\n\r\n    \r\n\r\n    const findRoleById = (rolesArray, roleId) => {\r\n        return rolesArray.filter(role => role.id === roleId)[0]\r\n    }\r\n\r\n    function mapUsers() {\r\n        return (\r\n            <TableContainer>\r\n                <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>front name</TableCell>\r\n                        <TableCell>Last name</TableCell>\r\n                        <TableCell>Email</TableCell>\r\n                        <TableCell>ID</TableCell>\r\n                        <TableCell>roles</TableCell>\r\n                        <TableCell>delete user</TableCell>\r\n                        <TableCell>change the user roles</TableCell>\r\n                        <TableCell>is voorzitter van</TableCell>\r\n                        <TableCell></TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {\r\n                        users.map(user => \r\n                            <TableRow key={user.id}>\r\n                                <TableCell>{user.frontName}</TableCell>\r\n                                <TableCell>{user.lastName}</TableCell>\r\n                                <TableCell>{user.email}</TableCell>\r\n                                <TableCell>{user.id}</TableCell>\r\n                                <TableCell>{user.roles.map(role => <div key={role}>{findRoleById(roles, role).abreviation}</div>)}</TableCell>\r\n                                <TableCell><button onClick={() => dispatch(deleteUser(token, user.id))}>Delete User</button></TableCell>\r\n                                <TableCell>\r\n                                    <div className=\"dropdown\">\r\n                                        <button className=\"dropbtn\">Dropdown</button>\r\n                                        <div className=\"dropdown-content\">\r\n                                            {roles.map(role => <button key={role.id} onClick={() => dispatch(toggleRole(token, role.id, user.id))}>{role.abreviation}</button>)}\r\n                                        </div>\r\n                                    </div>\r\n                                </TableCell>\r\n                                <TableCell>{user.chairman.map(role => <div key={role}>{findRoleById(roles, role).abreviation}</div>)}</TableCell>\r\n                                <TableCell>\r\n                                    <div className=\"dropdown\">\r\n                                        <button className=\"dropbtn\">Dropdown</button>\r\n                                        <div className=\"dropdown-content\">\r\n                                            {roles.map(role => <button key={role.id} onClick={() => dispatch(toggleChairman(token, role.id, user.id))}>{role.abreviation}</button>)}\r\n                                        </div>\r\n                                    </div>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )\r\n                    }\r\n                </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n    }\r\n\r\n    if (users && roles) {\r\n        return (\r\n            <div>\r\n                {mapUsers()}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return <div></div>\r\n}\r\n\r\nexport default UserList","import tokenRequest from \"../utils/axiosInstance\"\r\nconst baseUrl = `/api/moderator`\r\n\r\nexport const getUsers = (token) => {\r\n    return async dispatch => {\r\n        try {\r\n            const users = await tokenRequest(token).get(`${baseUrl}/users`)\r\n\r\n            const userList = users.data\r\n            dispatch({\r\n                type: \"USERS_LIST\",\r\n                data: {\r\n                    userList: userList\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error.response.status)\r\n            switch (error.response.status) {\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"INVALID_TOKEN\"\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const addUser = (token, email, frontName, lastName) => {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await tokenRequest(token).post(`${baseUrl}/addUser`,\r\n                {\r\n                    email: email,\r\n                    frontName: frontName,\r\n                    lastName: lastName\r\n                }\r\n            )\r\n            const userEntity = user.data\r\n\r\n            //refresh user list\r\n            dispatch({\r\n                type: \"ADD_USER\",\r\n                data: {\r\n                    user: userEntity\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error.response.data)\r\n            switch (error.response.status) {\r\n                case 400: \r\n                    dispatch({\r\n                        type: \"VALIDATION_ERROR_ADD_USER\",\r\n                        data: error.response.data\r\n                    })\r\n                    break\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"INVALID_TOKEN\"\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteUser = (token, userId) => {\r\n    return async dispatch => {\r\n        try {\r\n            await tokenRequest(token).post(`${baseUrl}/deleteUser`,\r\n                {\r\n                    userId: userId\r\n                }\r\n            )\r\n            //refresh user list\r\n            dispatch({\r\n                type: \"DELETE_USER_SUCCES\",\r\n            })\r\n        } catch (error) {\r\n            console.log(error.response.data)\r\n            switch (error.response.status) {\r\n                case 400: \r\n                    dispatch({\r\n                        type: \"VALIDATION_ERROR_ADD_USER\",\r\n                        data: error.response.data\r\n                    })\r\n                    break\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"INVALID_TOKEN\"\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const addRole = (token, abreviation, description) => {\r\n    return async dispatch => {\r\n        try {\r\n            const role = await tokenRequest(token).post(`${baseUrl}/addRole`,\r\n                {\r\n                    abreviation: abreviation,\r\n                    description: description\r\n                }\r\n            )\r\n            const roleEntity = role.data\r\n            console.log(\"addRole\", roleEntity)\r\n            //add role to role list\r\n            dispatch({\r\n                type: \"ADD_ROLE\",\r\n                data: {\r\n                    role : roleEntity\r\n                }    \r\n            })\r\n        } catch (error) {\r\n            switch (error.response.status) {\r\n                case 400: \r\n                    dispatch({\r\n                        type: \"VALIDATION_ERROR_ADD_ROLE\",\r\n                        data: error.response.data\r\n                    })\r\n                    break\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"INVALID_TOKEN\"\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const toggleRole = (token, roleId, userId) => {\r\n    return async dispatch => {\r\n        console.log('lamo')\r\n        try {\r\n            const toggleRoleRespone = await tokenRequest(token).post(`${baseUrl}/toggleRole`,\r\n                {\r\n                    roleId: roleId,\r\n                    userId: userId\r\n                }\r\n            )\r\n\r\n            const roleEntity = toggleRoleRespone.data.role\r\n            const userEntity = toggleRoleRespone.data.user\r\n            console.log(\"addRole\", toggleRoleRespone.data)\r\n            //add role to role list\r\n            dispatch({\r\n                type: \"TOGGLE_ROLE\",\r\n                data: {\r\n                    user : userEntity,\r\n                    role: roleEntity\r\n                }    \r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n            if(!error.response){\r\n                dispatch({\r\n                    type: \"WEIRD_ERROR\"\r\n                })\r\n                return;\r\n            }\r\n\r\n            switch (error.response.status) {\r\n                case 400: \r\n                    dispatch({\r\n                        type: \"VALIDATION_ERROR_ADD_ROLE\",\r\n                        data: error.response.data\r\n                    })\r\n                    break\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"INVALID_TOKEN\"\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const toggleChairman = (token, roleId, userId) => {\r\n    return async dispatch => {\r\n        try {\r\n            const toggleChairmanResponse = await tokenRequest(token).post(`${baseUrl}/toggleChairman`,\r\n                {\r\n                    roleId: roleId,\r\n                    userId: userId\r\n                }\r\n            )\r\n            const userEntity = toggleChairmanResponse.data\r\n            //add role to role list\r\n            dispatch({\r\n                type: \"TOGGLE_CHAIRMAN\",\r\n                data: {\r\n                    user : userEntity\r\n                }    \r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n            if(!error.response){\r\n                dispatch({\r\n                    type: \"WEIRD_ERROR\"\r\n                })\r\n                return;\r\n            }\r\n\r\n            switch (error.response.status) {\r\n                case 400: \r\n                    dispatch({\r\n                        type: \"TOGGLE_CHAIRMAN_ERROR\",\r\n                        data: {\r\n                            erroCode: error.response.data.errorCode\r\n                        }\r\n                    })\r\n                    break\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"INVALID_TOKEN\"\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}","import tokenRequest from \"../utils/axiosInstance\"\r\nconst baseUrl = `/api/timeslotCategorie`\r\n\r\n\r\nexport const addTimeslotCategorie = (token, title, cancelLength, subscribeLength) => {\r\n    return async dispatch => {\r\n        try {\r\n            const timeslotCategorie = await tokenRequest(token).post(`${baseUrl}`,\r\n                {\r\n                    title: title,\r\n                    cancelLength: cancelLength,\r\n                    subscribeLength: subscribeLength\r\n                }\r\n            )\r\n            const categorieEntity = timeslotCategorie.data\r\n\r\n            //refresh user list\r\n            dispatch({\r\n                type: \"ADD_TIMESLOT_CATEGORIE\",\r\n                data: {\r\n                    timeslotCategorie: categorieEntity\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error.response.data)\r\n            switch (error.response.status) {\r\n                case 400:\r\n                    dispatch({\r\n                        type: \"TIMESLOT_CATEGORIE_ERROR\",\r\n                        data: {\r\n                            errorCode: error.response.data.errorCode\r\n                        }\r\n                    })\r\n                    break\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"TIMESLOT_CATEGORIE_VALIDATION_ERROR\"\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const getTimeslotCategorieList = (token) => {\r\n    return async dispatch => {\r\n        try {\r\n            const timeslotCategorie = await tokenRequest(token).get(baseUrl)\r\n            const categoriesEntity = timeslotCategorie.data\r\n\r\n            //refresh user list\r\n            dispatch({\r\n                type: \"TIMESLOT_CATEGORIE_LIST\",\r\n                data: {\r\n                    timeslotCategories: categoriesEntity\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error.response.data)\r\n            switch (error.response.status) {\r\n                case 400:\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"TIMESLOT_CATEGORIE_ERROR\",\r\n                        data: {\r\n                            errorCode: error.response.data.errorCode\r\n\r\n                        }\r\n                    })\r\n                    break\r\n                // case 401:\r\n                //     dispatch({\r\n                //         type: \"TIMESLOT_CATEGORIE_VALIDATION_ERROR\"\r\n                //     })\r\n                //     break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const fetchOneTimeslotCategorie = (token, categorieId) => {\r\n    return async dispatch => {\r\n        try {\r\n            const timeslotCategorie = await tokenRequest(token).get(`${baseUrl}/${categorieId}`)\r\n            const categorieEntity = timeslotCategorie.data.timeslotCategorie\r\n            //refresh user list\r\n            dispatch({\r\n                type: \"FETCH_ONE_TIMESLOT_CATEGORIE\",\r\n                data: {\r\n                    timeslotCategorie: categorieEntity\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error.response.data)\r\n            switch (error.response.status) {\r\n                case 400:\r\n                    dispatch({\r\n                        type: \"TIMESLOT_CATEGORIE_ERROR\",\r\n                        data: {\r\n                            errorCode: error.response.data.errorCode\r\n\r\n                        }\r\n                    })\r\n                    break\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"TIMESLOT_CATEGORIE_VALIDATION_ERROR\"\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const changeTimeslotCategorie = (token, timeslotCategorieId, title, cancelLength, subscribeLength) => {\r\n    return async dispatch => {\r\n        try {\r\n            const timeslotCategorie = await tokenRequest(token).post(`${baseUrl}/change`,\r\n                {\r\n                    timeslotCategorieId: timeslotCategorieId,\r\n                    title: title,\r\n                    cancelLength: cancelLength,\r\n                    subscribeLength: subscribeLength\r\n                }\r\n            )\r\n            const categorieEntity = timeslotCategorie.data.timeslotCategorie\r\n\r\n            //refresh user list\r\n            dispatch({\r\n                type: \"CHANGE_TIMESLOT_CATEGORIE\",\r\n                data: {\r\n                    timeslotCategorie: categorieEntity\r\n                }\r\n            })\r\n        } catch (error) {\r\n            switch (error.response.status) {\r\n                case 401:\r\n                case 400:\r\n                    dispatch({\r\n                        type: \"TIMESLOT_CATEGORIE_ERROR\",\r\n                        data: {\r\n                            errorCode: error.response.data.errorCode\r\n                        }\r\n                    })\r\n                    break\r\n                // case 401:\r\n                //     dispatch({\r\n                //         type: \"TIMESLOT_CATEGORIE_VALIDATION_ERROR\"\r\n                //     })\r\n                //     break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { errorCodeFormatting } from '../utils/errorCodeFormatting';\r\nimport { addTimeslotCategorie, fetchOneTimeslotCategorie, changeTimeslotCategorie } from \"../actions/timeslotCategorie\"\r\nimport { useHistory } from 'react-router';\r\n\r\nfunction TimeslotCategorieForm(props) {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    \r\n    const timeslotCategorieState = useSelector(state => state.timeslotCategorie)\r\n    const token = useSelector(state => state.login.token)\r\n\r\n    const timeslotCategorieId = props.match ? props.match.params.timeslotCategorieId : undefined\r\n\r\n    useEffect(() => {\r\n        if(timeslotCategorieId) {\r\n            dispatch(fetchOneTimeslotCategorie(token, timeslotCategorieId))\r\n            setApiCall(true)\r\n        }\r\n    }, [token, timeslotCategorieId, dispatch])\r\n\r\n\r\n    let defaultState = {\r\n        title: \"\",\r\n        cancelLength: 24,\r\n        subscribeLength: 0\r\n    }\r\n\r\n\r\n    //uses this state to set the default values for title etc \r\n    let [apiCall, setApiCall] = useState(false)\r\n    let [title, setTitle] = useState(defaultState.title)\r\n    let [cancelLength, setCancelLength] = useState(defaultState.cancelLength)\r\n    let [subscribeLength, setSubscribeLength] = useState(defaultState.subscribeLength)\r\n\r\n    //sets the state in case it is editing a existing timeslotcategorie\r\n    if(apiCall && timeslotCategorieId && timeslotCategorieState.timeslotCategorie && timeslotCategorieState.timeslotCategorie.id === timeslotCategorieId) {\r\n        setTitle(timeslotCategorieState.timeslotCategorie.title)\r\n        setCancelLength(timeslotCategorieState.timeslotCategorie.cancelLength)\r\n        setSubscribeLength(timeslotCategorieState.timeslotCategorie.subscribeLength)\r\n        setApiCall(false)\r\n    }\r\n\r\n    const handleTitleChange = (event) => {\r\n        setTitle(event.target.value)\r\n    }\r\n\r\n    const handleCancelLengthChange = (event) => {\r\n        if (event.target.value !== \"\") {\r\n            setCancelLength(Number(event.target.value))\r\n        } else {\r\n            setCancelLength(\"\")\r\n        }\r\n    }\r\n\r\n    const handleSubscribeLengthChange = (event) => {\r\n        if (event.target.value !== \"\") {\r\n            setSubscribeLength(Number(event.target.value))\r\n        } else {\r\n            setSubscribeLength(\"\")\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        if(!timeslotCategorieId) {\r\n            dispatch(addTimeslotCategorie(token, title, cancelLength, subscribeLength))\r\n            setTitle(\"\")\r\n            setCancelLength(24)\r\n        } else {\r\n            dispatch(changeTimeslotCategorie(token, timeslotCategorieId, title, cancelLength, subscribeLength)) \r\n        }\r\n    }\r\n\r\n\r\n    const errorText = (errorCode) => {\r\n        switch (errorCode) {\r\n            case \"TITLE_LENGTH_ERROR\":\r\n                return \"The title should atleast be 3 charactert long\"\r\n            case \"TIME_ERROR\":\r\n                return \"cancel lenght cannot be greater than the subscribe time\"\r\n            case \"SAVE_ERROR\":\r\n                return \"The title should be longer than 3 characters\"\r\n            case \"NOT_AUTHORIZED\":\r\n                return \"You do not have the right role to edit timeslotcategories\"\r\n            default:\r\n                return \"\"\r\n        }\r\n    }\r\n\r\n\r\n    //resets the succes and redirect on a succesfull edit\r\n    if(timeslotCategorieState.succes) {\r\n        dispatch({type: \"RESET_SUCCES_TIMESLOT_CATEGORIE\"})\r\n        history.push(\"/moderator\")\r\n    } \r\n\r\n    return (\r\n        <div>\r\n            <h2>Add timelslotCategorie</h2>\r\n            {errorCodeFormatting(timeslotCategorieState.errorCode, errorText)}\r\n            < form onSubmit={handleSubmit} >\r\n                title: <input type=\"text\" value={title} onChange={handleTitleChange} /> <br />\r\n                cancle length (hours): <input type=\"number\" min={0} value={cancelLength} onChange={handleCancelLengthChange} /><br />\r\n                subscribe length(hours): <input type=\"number\" min={0} value={subscribeLength} onChange={handleSubscribeLengthChange} /><br />\r\n                <input type=\"submit\" />\r\n            </form >\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TimeslotCategorieForm\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addUser } from \"../actions/moderator\"\r\n\r\n\r\nfunction AddUser() {\r\n    const dispatch = useDispatch()\r\n\r\n    const token = useSelector(state => state.login.token)\r\n\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [frontName, setFrontName] = useState(\"\")\r\n    const [lastName, setLastName] = useState(\"\")\r\n    const handleEmailChange = (event) => {\r\n        setEmail(event.target.value)\r\n    }\r\n\r\n    const handleFrontNameChange = (event) => {\r\n        setFrontName(event.target.value)\r\n    }\r\n\r\n    const handleLastNameChange = (event) => {\r\n        setLastName(event.target.value)\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        dispatch(addUser(token, email, frontName, lastName))\r\n        setFrontName(\"\")\r\n        setLastName(\"\")\r\n        setEmail(\"\")\r\n    }\r\n    return (\r\n        <div>\r\n            <h2>Add user</h2>\r\n            < form onSubmit={handleSubmit} >\r\n                email: <input type=\"email\" value={email} onChange={handleEmailChange} /> <br />\r\n                front name: <input type=\"text\" value={frontName} onChange={handleFrontNameChange} /><br />\r\n                last name  <input type=\"text\" value={lastName} onChange={handleLastNameChange} /><br />\r\n                <input type=\"submit\" />\r\n            </form >\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddUser","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getRoleList } from \"../../actions/role\"\r\nimport \"../../css/dropdown.css\"\r\nimport { TableContainer, Table, TableHead, TableRow, TableCell, TableBody } from '@material-ui/core';\r\nimport { useHistory } from 'react-router';\r\n\r\nfunction RoleList() {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const token = useSelector(state => state.login.token)\r\n    const roles = useSelector(state => state.roles)\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            dispatch(getRoleList())\r\n        }\r\n    }, [dispatch, token])\r\n\r\n    const redirectEditRole = (roleId) => {\r\n        history.push(`/role/edit/${roleId}`)\r\n    }\r\n\r\n\r\n    function mapRoles(roles) {\r\n        return (\r\n            <TableContainer>\r\n                <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>ID</TableCell>\r\n                        <TableCell>abreviation</TableCell>\r\n                        <TableCell>description</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {\r\n                        roles.map(role => \r\n                            <TableRow key={role.id} onDoubleClick={() => redirectEditRole(role.id)}>\r\n                                <TableCell>{role.id}</TableCell>\r\n                                <TableCell>{role.abreviation}</TableCell>\r\n                                <TableCell>{role.description}</TableCell>\r\n                            </TableRow>\r\n                        )\r\n                    }\r\n                </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n    }\r\n    if (roles) {\r\n        return (\r\n            <div>\r\n                {mapRoles(roles)}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return <div></div>\r\n}\r\n\r\nexport default RoleList","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addRole } from \"../actions/moderator\"\r\n\r\nimport { Button } from '@material-ui/core';\r\n\r\n\r\nfunction AddUser() {\r\n    const dispatch = useDispatch()\r\n\r\n    const token = useSelector(state => state.login.token)\r\n\r\n\r\n    const [abreviation, setAbreviation] = useState(\"\")\r\n    const [description, setDescription] = useState(\"\")\r\n    const handleAbreviationChange = (event) => {\r\n        setAbreviation(event.target.value)\r\n    }\r\n\r\n    const handleDescriptionChange = (event) => {\r\n        setDescription(event.target.value)\r\n    }\r\n\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        dispatch(addRole(token, abreviation, description))\r\n        setAbreviation(\"\")\r\n        setDescription(\"\")\r\n    }\r\n    return (\r\n        <div>\r\n            <h2>Add a role</h2>\r\n            < form onSubmit={handleSubmit} >\r\n                abreviation: <input type=\"text\" value={abreviation} onChange={handleAbreviationChange} /> <br />\r\n                description: <input type=\"text\" value={description} onChange={handleDescriptionChange} /><br />\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">Submit</Button>\r\n            </form >\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddUser","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport \"../../css/dropdown.css\"\r\nimport { TableContainer, Table, TableHead, TableRow, TableCell, TableBody } from '@material-ui/core';\r\nimport { getTimeslotCategorieList } from '../../actions/timeslotCategorie';\r\nimport { useHistory } from 'react-router';\r\n\r\nfunction TimeslotCategorieList() {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const token = useSelector(state => state.login.token)\r\n    const timeslotCategories = useSelector(state => state.timeslotCategorie.timeslotCategories)\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            dispatch(getTimeslotCategorieList())\r\n        }\r\n    }, [dispatch, token])\r\n\r\n    const redirectTimeslotCategorieEdit = (categorieId) => {\r\n        history.push(`timeslotcategorie/edit/${categorieId}`)\r\n    }\r\n\r\n    function mapTimeslotCategories(timeslotCategories) {\r\n        return (\r\n            <TableContainer>\r\n                <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>ID</TableCell>\r\n                        <TableCell>title</TableCell>\r\n                        <TableCell>cancel length (hours)</TableCell>\r\n                        <TableCell>subscribe Length (hours)</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {\r\n                        timeslotCategories.map(timeslot => \r\n                            <TableRow key={timeslot.id} onDoubleClick={() => redirectTimeslotCategorieEdit(timeslot.id)}>\r\n                                <TableCell>{timeslot.id}</TableCell>\r\n                                <TableCell>{timeslot.title}</TableCell>\r\n                                <TableCell>{timeslot.cancelLength}</TableCell>\r\n                                <TableCell>{timeslot.subscribeLength}</TableCell>\r\n                            </TableRow>\r\n                        )\r\n                    }\r\n                </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n    }\r\n    if (timeslotCategories) {\r\n        return (\r\n            <div>\r\n                {mapTimeslotCategories(timeslotCategories)}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return <div></div>\r\n}\r\n\r\nexport default TimeslotCategorieList","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getUserInformation } from \"../actions/user\"\r\n\r\nimport UserInformation from \"./UserInformation\"\r\nimport UserList from \"./listComponents/UserList\"\r\nimport TimeslotCategorieForm from './TimeslotCatogorieForm';\r\n\r\nimport AddUser from \"./AddUser\"\r\n\r\nimport RoleList from \"./listComponents/RoleList\"\r\nimport AddRole from \"./AddRole\"\r\nimport TimeslotCategorieList from './listComponents/TimeslotCategorieList';\r\nimport { ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\n\r\nfunction Moderator() {\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(state => state.login.token)\r\n    const userInformation = useSelector(state => state.user)\r\n\r\n    useEffect(() => {\r\n        dispatch(getUserInformation(token))\r\n    }, [dispatch, token])\r\n\r\n\r\n    if(userInformation.user) {\r\n        return (\r\n            <div>\r\n                <UserInformation userInformation={userInformation}/>\r\n    \r\n                <ExpansionPanel>\r\n                    <ExpansionPanelSummary\r\n                        id=\"user_panel\"\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        Users\r\n                    </ExpansionPanelSummary>\r\n    \r\n                    <ExpansionPanelDetails>\r\n                        <div>\r\n                            <UserList />\r\n                            <AddUser />\r\n                        </div>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n    \r\n                <ExpansionPanel>\r\n                    <ExpansionPanelSummary\r\n                        id=\"roles_panel\"\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        Roles\r\n                    </ExpansionPanelSummary>\r\n    \r\n                    <ExpansionPanelDetails>\r\n                        <div>\r\n                            <RoleList />\r\n                            <AddRole />\r\n                        </div>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n    \r\n    \r\n                <ExpansionPanel>\r\n                    <ExpansionPanelSummary\r\n                        id=\"timeslot_categories_panel\"\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                    >\r\n                        Timeslot categories\r\n                    </ExpansionPanelSummary>\r\n    \r\n                    <ExpansionPanelDetails>\r\n                        <div>\r\n                            <TimeslotCategorieList />\r\n                            <TimeslotCategorieForm />\r\n                        </div>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n    \r\n            </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div></div>\r\n    )\r\n\r\n}\r\n\r\nexport default Moderator","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux'\r\nimport { logout } from \"../actions/login\"\r\nimport { useHistory } from 'react-router';\r\n\r\nfunction Logout() {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        dispatch(logout())\r\n        history.push(\"/\")\r\n    }, [dispatch, history])\r\n\r\n    return (\r\n        <div>logout</div>\r\n    )\r\n}\r\n\r\nexport default Logout","import tokenRequest from \"../utils/axiosInstance\"\r\n\r\nconst baseUrl = `/api/timeslot`\r\n\r\nexport const addTimeslot = (token, description, startTime, endTime, maxPeople, roles, timeslotCategorie) => {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await tokenRequest(token).post(`${baseUrl}`,\r\n                {\r\n                    description: description,\r\n                    startTime: startTime,\r\n                    endTime: endTime,\r\n                    maxPeople: maxPeople,\r\n                    roles: roles,\r\n                    timeslotCategorie: timeslotCategorie\r\n                }\r\n            )\r\n            const timeslotData = user.data\r\n\r\n            setTimeout(() => {\r\n                dispatch({\r\n                    type: \"RESET_SUCCES_TIMESLOT\"\r\n                })\r\n            }, 5000)\r\n\r\n            //refresh user list\r\n            dispatch({\r\n                type: \"ADD_TIMESLOT\",\r\n                data: {\r\n                    timeslot: timeslotData\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error.response)\r\n            \r\n            switch (error.response.status) {\r\n                case 400: \r\n                    dispatch({\r\n                        type: \"TIMESLOT_ERROR\",\r\n                        data: {\r\n                            errorCode: error.response.data.errorCode,\r\n                            errorInfo: error.response.data.errorInfo\r\n                        } \r\n                    })\r\n                    break\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"TIMESLOT_ERROR\",\r\n                        data: {\r\n                            errorCode: error.response.data.errorCode\r\n                        }\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const getTimeslots = (token) => {\r\n    return async dispatch => {\r\n        try {\r\n            const timeslots = await tokenRequest(token).get(baseUrl)\r\n            const timeslotsData = timeslots.data\r\n\r\n            //refresh user list\r\n            dispatch({\r\n                type: \"TIMESLOT_LIST\",\r\n                data: {\r\n                    timeslots: timeslotsData\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error.response.data)\r\n            switch (error.response.status) {\r\n                case 400: \r\n                    dispatch({\r\n                        type: \"VALIDATION_ERROR_TIMESLOT\",\r\n                        data: error.response.data\r\n                    })\r\n                    break\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"INVALID_TOKEN\"\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const getUserTimeslots = (token) => {\r\n    return async dispatch => {\r\n        try {\r\n            const timeslots = await tokenRequest(token).get(`${baseUrl}/user`)\r\n\r\n            const timeslotsData = timeslots.data.timeslots\r\n            //refresh user list\r\n            dispatch({\r\n                type: \"GET_USER_TIMESLOTS\",\r\n                data: {\r\n                    userTimeslots: timeslotsData\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error.response.data)\r\n            switch (error.response.status) {\r\n                case 400: \r\n                    dispatch({\r\n                        type: \"TIMESLOT_ERROR\",\r\n                        data: {\r\n                            errorCode: error.response.date.errorCode\r\n                        }\r\n                    })\r\n                    break\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"INVALID_TOKEN\"\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const subscribeTimeslot = (token, timeslotId) => {\r\n    return async dispatch => {\r\n        try {\r\n            const timeslot = await tokenRequest(token).post(`${baseUrl}/subscribe`,\r\n                {\r\n                    timeslotId: timeslotId\r\n                }\r\n            )\r\n            const timeslotData = timeslot.data\r\n\r\n            //refresh user list\r\n            dispatch({\r\n                type: \"SUBSCRIBED_TIMESLOT\",\r\n                data: {\r\n                    timeslot: timeslotData\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error.response.data)\r\n            switch (error.response.status) {\r\n                case 400: \r\n                    dispatch({\r\n                        type: \"TIMESLOT_ERROR\",\r\n                        data: error.response.data\r\n                    })\r\n                    break\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"INVALID_TOKEN\"\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const unSubscribe = (token, timeslotId) => {\r\n    return async dispatch => {\r\n        try {\r\n            const timeslot = await tokenRequest(token).post(`${baseUrl}/unsubscribe`,\r\n                {\r\n                    timeslotId: timeslotId\r\n                }\r\n            )\r\n            const timeslotData = timeslot.data\r\n\r\n            //unsubscribe redux is same as subscribe redux maybe change name in future?\r\n            dispatch({\r\n                type: \"SUBSCRIBED_TIMESLOT\",\r\n                data: {\r\n                    timeslot: timeslotData\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n            switch (error.response.status) {\r\n                case 400: \r\n                    dispatch({\r\n                        type: \"TIMESLOT_ERROR\",\r\n                        data: error.response.data\r\n                    })\r\n                    break\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"INVALID_TOKEN\"\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteTimeslot = (token, timeslotId) => {\r\n    return async dispatch => {\r\n        try {\r\n            await tokenRequest(token).post(`${baseUrl}/delete`,\r\n                {\r\n                    timeslotId: timeslotId\r\n                }\r\n            )\r\n\r\n            //unsubscribe redux is same as subscribe redux maybe change name in future?\r\n            dispatch({\r\n                type: \"DELETE_TIMESLOT\",\r\n                data: {\r\n                    timeslotId: timeslotId \r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n            switch (error.response.status) {\r\n                case 400: \r\n                    dispatch({\r\n                        type: \"TIMESLOT_ERROR\",\r\n                        data: error.response.data\r\n                    })\r\n                    break\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"INVALID_TOKEN\"\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}","function pad(number) {\r\n    if (number < 10) {\r\n      return '0' + number;\r\n    }\r\n    return number;\r\n}\r\n\r\nexport const formatDateForCard = (startDate, endDate) => {\r\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n    \r\n    if (toDateString(startDate) === toDateString(endDate)) {\r\n        return `${pad(startDate.getHours())}:${pad(startDate.getMinutes())}-${pad(endDate.getHours())}:${pad(endDate.getMinutes())} ${months[startDate.getMonth()]}, ${startDate.getDate()} ${startDate.getFullYear()}`\r\n    }\r\n\r\n    if(startDate.getFullYear() === endDate.getFullYear()) {\r\n        return `${months[startDate.getMonth()]}, ${startDate.getDate()} ${pad(startDate.getHours())}:${pad(startDate.getMinutes())}-${months[endDate.getMonth()]}, ${endDate.getDate()} ${pad(endDate.getHours())}:${pad(endDate.getMinutes())}`\r\n    }\r\n    return `${months[startDate.getMonth()]}, ${startDate.getDate()} ${startDate.getFullYear()}, ${pad(startDate.getHours())}:${pad(startDate.getMinutes())}-${months[endDate.getMonth()]}, ${endDate.getDate()} ${endDate.getFullYear()}, ${pad(endDate.getHours())}:${pad(endDate.getMinutes())}`\r\n}\r\n\r\nexport const toDateString = (date) => {\r\n    return `${date.getFullYear()}-${pad(date.getMonth() + 1)}-${pad(date.getDate())}`\r\n}\r\n\r\nexport const toTimeString = (date) => {\r\n    return `${pad(date.getHours())}:${pad(date.getMinutes())}`\r\n}","export const checkRole = (userRoles, checkRole) => {\r\n    for (const user in userRoles){\r\n        if(userRoles[user].abreviation === checkRole) {\r\n            return true\r\n        }\r\n    }\r\n    return false\r\n}\r\n\r\nexport const checkTimeslotCategorie = (categorieList, categorieId) => {\r\n\r\n\r\n    for (const index in categorieList) {\r\n        if(categorieList[index].id === categorieId) {\r\n            return categorieList[index]\r\n        }\r\n    }\r\n    return null\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addTimeslot } from \"../actions/timeslot\"\r\n\r\nimport { toDateString, toTimeString } from \"../utils/timeFormat\"\r\nimport { errorCodeFormatting } from \"../utils/errorCodeFormatting\"\r\n\r\nimport { getRoleList } from '../actions/role';\r\n\r\nimport { Alert } from \"@material-ui/lab\"\r\nimport { getTimeslotCategorieList } from '../actions/timeslotCategorie';\r\nimport { getUserInformation } from '../actions/user';\r\nimport { checkRole } from '../utils/checkRole';\r\n\r\nfunction TimeslotForm() {\r\n    const token = useSelector(state => state.login.token)\r\n    const roles = useSelector(state => state.roles)\r\n    const userRoles = useSelector(state => state.user.roles)\r\n    const user = useSelector(state => state.user.user)\r\n\r\n    const timeslotCategories = useSelector(state => state.timeslotCategorie.timeslotCategories)\r\n    const errorCode = useSelector(state => state.timeslot.errorCode)\r\n    const successTimeslot = useSelector(state => state.timeslot.succes)\r\n\r\n\r\n    const [description, setDescription] = useState(\"\")\r\n    const [startTime, setStarttime] = useState(new Date())\r\n    const [endTime, setEndTime] = useState(new Date())\r\n    const [maxPeople, setMaxPeople] = useState(1)\r\n    const [roleSelection, setRoleSelection] = useState([])\r\n    const [categorieSelection, setCategorieSelection] = useState(\"\")\r\n\r\n\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getRoleList())\r\n        dispatch(getTimeslotCategorieList(token))\r\n        dispatch(getUserInformation(token))\r\n    }, [dispatch, token])\r\n\r\n    const handleDescriptionChange = (event) => {\r\n        setDescription(event.target.value)\r\n    }\r\n\r\n    const handleStartTimeDateChange = (event) => {\r\n        const dateSplitted = event.target.value.split(\"-\")\r\n        let tempDate = new Date(startTime.getTime())\r\n\r\n        if (event.target.value !== \"\") {\r\n            tempDate.setFullYear(dateSplitted[0])\r\n            tempDate.setMonth(dateSplitted[1] - 1)\r\n            tempDate.setDate(dateSplitted[2])\r\n\r\n            // if the new date start time is later than the end time change the end time to the start time\r\n            if (tempDate >= new Date(endTime.getTime())) {\r\n                setEndTime(tempDate)\r\n            }\r\n            setStarttime(tempDate)\r\n        }\r\n    }\r\n\r\n    const handleStartTimeTimeChange = (event) => {\r\n        let timeSplitted = event.target.value.split(\":\")\r\n        let tempDate = new Date(startTime.getTime())\r\n\r\n        if (event.target.value !== \"\") {\r\n\r\n            tempDate.setHours(timeSplitted[0])\r\n            tempDate.setMinutes(timeSplitted[1])\r\n            tempDate.setSeconds(0)\r\n            // if the new date start time is later than the end time change the end time to the start time\r\n            if (tempDate >= new Date(endTime.getTime())) {\r\n                setEndTime(tempDate)\r\n            }\r\n            setStarttime(tempDate)\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const handleEndTimeDateChange = (event) => {\r\n        const dateSplitted = event.target.value.split(\"-\")\r\n        let tempDate = new Date(endTime.getTime())\r\n        if (event.target.value !== \"\") {\r\n            tempDate.setFullYear(dateSplitted[0])\r\n            tempDate.setMonth(dateSplitted[1] - 1)\r\n            tempDate.setDate(dateSplitted[2])\r\n\r\n            setEndTime(tempDate)\r\n        }\r\n    }\r\n\r\n    const handleEndTimeTimeChange = (event) => {\r\n\r\n        let timeSplitted = event.target.value.split(\":\")\r\n        let tempDate = new Date(endTime.getTime())\r\n\r\n        if (event.target.value !== \"\") {\r\n            tempDate.setHours(timeSplitted[0])\r\n            tempDate.setMinutes(timeSplitted[1])\r\n            tempDate.setSeconds(0)\r\n\r\n            setEndTime(tempDate)\r\n        }\r\n    }\r\n\r\n    const handleMaxPeople = (event) => {\r\n        setMaxPeople(event.target.value)\r\n    }\r\n\r\n    const handleRoleSelectionChange = (event) => {\r\n        const roleToSelect = event.target.value\r\n\r\n        if (roleSelection.includes(roleToSelect)) {\r\n            console.log(\"lmao\")\r\n            setRoleSelection(roleSelection.filter(role => role !== roleToSelect))\r\n        } else {\r\n            setRoleSelection(roleSelection.concat(event.target.value))\r\n        }\r\n    }\r\n\r\n    const handleCategorieSelectionChange = (event) => {\r\n        setCategorieSelection(event.target.value)\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        console.log(startTime)\r\n        //if the categorie is not changed set the first categorie in the list\r\n        if (categorieSelection === \"\" && !categorieSelection) {\r\n            dispatch(addTimeslot(token,\r\n                description, startTime, endTime,\r\n                maxPeople, roleSelection, timeslotCategories[0].id))\r\n        } else {\r\n            dispatch(addTimeslot(token, description, startTime, endTime, maxPeople, roleSelection, categorieSelection))\r\n        }\r\n        event.preventDefault()\r\n\r\n    }\r\n\r\n    const errorText = (errorCode) => {\r\n        switch (errorCode) {\r\n            case \"NOT_AUTHORIZED\":\r\n                return \"You are not not authorized to create timeslot\"\r\n            case \"NO_ROLES_ERROR\": \r\n                return \"You have not selected any roles for the timeslot please select one\"\r\n            case \"START_GREATER_END_TIME_ERROR\":\r\n                return \"The start time is earlier than the end time.\"\r\n            default:\r\n                return \"\"\r\n        }\r\n    }\r\n\r\n    const successFormatting = (success) => {\r\n        if (success) {\r\n            return <Alert severity=\"success\">This is a success alert — check it out!</Alert>\r\n        }\r\n        return;\r\n    }\r\n\r\n    const findRoleById = (rolesArray, roleId) => {\r\n        return rolesArray.filter(role => role.id === roleId)[0]\r\n    }\r\n\r\n    //do not delete\r\n    const startTimeDateString = toDateString(startTime)\r\n    const startTimeTimeString = toTimeString(startTime)\r\n\r\n    const endTimeDateString = toDateString(endTime)\r\n    const endTimeTimeString = toTimeString(endTime)\r\n\r\n    let chooseRoles = roles.map(role => role.id)\r\n    if(!checkRole(userRoles, \"createTimeslot\")){\r\n        if(user) {\r\n            chooseRoles = user.chairman\r\n        }else {\r\n            chooseRoles = []\r\n        }\r\n    }\r\n\r\n\r\n\r\n    if (roles.length !== 0 && timeslotCategories !== 0) {\r\n        return (\r\n            <div>\r\n                {errorCodeFormatting(errorCode, errorText)}\r\n                {successFormatting(successTimeslot)}\r\n                < form onSubmit={handleSubmit} >\r\n                    description: <input type=\"text\" value={description} onChange={handleDescriptionChange} /> <br />\r\n                    startTime date: <input type=\"date\" value={startTimeDateString} onChange={handleStartTimeDateChange} />\r\n                    startTime time: <input type=\"time\" value={startTimeTimeString} onChange={handleStartTimeTimeChange} />\r\n                    <br />\r\n                    endTime date: <input type=\"date\" value={endTimeDateString} onChange={handleEndTimeDateChange} />\r\n                    endTime time: <input type=\"time\" value={endTimeTimeString} onChange={handleEndTimeTimeChange} />\r\n\r\n                    <br />\r\n                     maxPeople: <input type=\"number\" value={maxPeople} onChange={handleMaxPeople} /><br />\r\n                    <select value={roleSelection} onChange={handleRoleSelectionChange} multiple={true}>\r\n                        {\r\n                            chooseRoles.map((role) => {\r\n                                role = findRoleById(roles, role)\r\n                                return <option key={role.id} value={role.id}>{role.abreviation}: {role.description}</option>\r\n                            })\r\n                        }\r\n                    </select>\r\n                    <select value={categorieSelection} onChange={handleCategorieSelectionChange}>\r\n                        {\r\n                            timeslotCategories.map((timeslotCategorie) => {\r\n                                return <option key={timeslotCategorie.id} value={timeslotCategorie.id}>{timeslotCategorie.title} minimum cancel times (hours): {timeslotCategorie.cancelLength}</option>\r\n                            })\r\n                        }\r\n                    </select>\r\n                    <input type=\"submit\" />\r\n                </form >\r\n            </div>\r\n        )\r\n    } else {\r\n        return <div>loading roles</div>\r\n    }\r\n}\r\n\r\nexport default TimeslotForm","import React from 'react';\r\nimport { Card, CardHeader, CardContent, Typography, CardActions, Button, Grid, List, ListItem, ListItemText, ButtonGroup } from '@material-ui/core';\r\nimport { subscribeTimeslot, unSubscribe, deleteTimeslot } from '../actions/timeslot';\r\nimport { formatDateForCard } from \"../utils/timeFormat\"\r\nimport { useDispatch } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nimport { checkRole, checkTimeslotCategorie } from '../utils/checkRole';\r\n\r\n\r\nfunction TimeslotCards({ timeslots, userRoles, categories, userId, roleList, sortingOption, token}) {\r\n    const dispatch = useDispatch()\r\n\r\n    const findRoleById = (rolesArray, roleId) => {\r\n        return rolesArray.filter(role => role.id === roleId)[0]\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            width: 400,\r\n            height: 200,\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const sortTimeslot = (timeslots, sortOption) => {\r\n        switch (sortOption) {\r\n            case \"startTime\":\r\n                return timeslots.sort((firstTimeslot, secondTimeslot) => {\r\n                    return new Date(firstTimeslot.startTime) - new Date(secondTimeslot.startTime)\r\n                })\r\n            case \"endTime\":\r\n                return timeslots.sort((firstTimeslot, secondTimeslot) => {\r\n                    return new Date(firstTimeslot.endTime) - new Date(secondTimeslot.endTime)\r\n                })\r\n            case \"usersRising\":\r\n                return timeslots.sort((firstTimeslot, secondTimeslot) => {\r\n                    return firstTimeslot.subscribed.length - secondTimeslot.subscribed.length\r\n                })\r\n            case \"usersDecreasing\":\r\n                return timeslots.sort((firstTimeslot, secondTimeslot) => {\r\n                    return secondTimeslot.subscribed.length - firstTimeslot.subscribed.length\r\n                })\r\n            default:\r\n                return timeslots.sort((firstTimeslot, secondTimeslot) => {\r\n                    return new Date(firstTimeslot.startTime) - new Date(secondTimeslot.startTime)\r\n                })\r\n        }\r\n    }\r\n\r\n    const sorted = sortTimeslot(timeslots, sortingOption)\r\n\r\n\r\n    return <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n    >\r\n        {sorted.map(timeslot => {\r\n            const startTimeDate = new Date(timeslot.startTime)\r\n            const endTimeDate = new Date(timeslot.endTime)\r\n\r\n            const returnElement =\r\n                <Card key={timeslot.id}>\r\n                    <CardHeader title={formatDateForCard(startTimeDate, endTimeDate)} subheader={checkTimeslotCategorie(categories, timeslot.timeslotCategorie).title}\r\n                        className={classes.root} />\r\n                    <CardContent>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} md={6}>\r\n                                <Typography variant=\"h6\" className={classes.title}>\r\n                                    Roles\r\n                            </Typography>\r\n                                <List dense={true}>\r\n                                    {timeslot.roles.map((roleId) => {\r\n                                        const role = findRoleById(roleList, roleId)\r\n\r\n                                        return <ListItem key={roleId}>\r\n                                            <ListItemText\r\n                                                primary={role.abreviation}\r\n                                            />\r\n                                        </ListItem>\r\n                                    })}\r\n                                </List>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <Typography variant=\"h6\" className={classes.title}>\r\n                                    Users\r\n                            </Typography>\r\n                                <List dense={true}>\r\n                                    {timeslot.subscribed.map((userId) => {\r\n\r\n                                        return <ListItem key={userId}>\r\n                                            <ListItemText\r\n                                                primary={userId}\r\n                                            />\r\n                                        </ListItem>\r\n                                    })}\r\n                                </List>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            {`${timeslot.subscribed.length}/${timeslot.maxPeople}`}<br />\r\n                        </Typography>\r\n\r\n                    </CardContent>\r\n\r\n                    <CardActions>\r\n                        <ButtonGroup>\r\n                            {\r\n                            \r\n                                !timeslot.subscribed.includes(userId) ?\r\n                                    <Button onDoubleClick={() => dispatch(subscribeTimeslot(token, timeslot.id))} color=\"primary\">\r\n                                        Meld mij aan\r\n                            </Button> :\r\n                                    <Button onDoubleClick={() => dispatch(unSubscribe(token, timeslot.id))} color=\"secondary\">\r\n                                        unSubscribe\r\n                            </Button>\r\n                            }\r\n                            {checkRole(userRoles, \"createTimeslot\") ? <Button onDoubleClick={() => dispatch(deleteTimeslot(token, timeslot.id))} color=\"secondary\">\r\n                                delete\r\n                        </Button> : \"\"}\r\n                        </ButtonGroup>\r\n                    </CardActions>\r\n                </Card>\r\n\r\n            return returnElement\r\n        })}\r\n    </Grid>\r\n}\r\n\r\nexport default TimeslotCards","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getTimeslots } from '../../actions/timeslot';\r\nimport { getRoleList } from '../../actions/role';\r\n\r\n\r\nimport { errorCodeFormatting } from '../../utils/errorCodeFormatting';\r\nimport { getUserInformation } from '../../actions/user';\r\nimport { getTimeslotCategorieList } from '../../actions/timeslotCategorie';\r\nimport TimeslotCards from \"../TimeslotCards\"\r\nimport { checkTimeslotCategorie } from '../../utils/checkRole';\r\nimport { ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, Typography } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\n\r\nfunction TimeslotList() {\r\n    const dispatch = useDispatch()\r\n\r\n\r\n\r\n    const timeslots = useSelector(state => state.timeslot.timeslots)\r\n    const roles = useSelector(state => state.roles)\r\n    const userInformation = useSelector(state => state.user)\r\n    const timeslotCategories = useSelector(state => state.timeslotCategorie.timeslotCategories)\r\n    const timeslotStatus = useSelector(state => state.timeslot)\r\n    const token = useSelector(state => state.login.token)\r\n\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            dispatch(getTimeslots(token))\r\n            dispatch(getRoleList(token))\r\n            dispatch(getUserInformation(token))\r\n            dispatch(getTimeslotCategorieList(token))\r\n        }\r\n    }, [dispatch, token])\r\n\r\n    const sortOptions = [\r\n        {\r\n            value: \"startTime\",\r\n            name: \"start tijd\"\r\n        },\r\n        {\r\n            value: \"endTime\",\r\n            name: \"eind tijd\"\r\n        },\r\n        {\r\n            value: \"usersRising\",\r\n            name: \"hoeveelheid aangemeld stijdend\"\r\n        },\r\n        {\r\n            value: \"usersDecreasing\",\r\n            name: \"hoeveelheid aangemeld dalend\"\r\n        }\r\n    ]\r\n\r\n    const [sortOption, setSortOption] = useState(sortOptions[0].value)\r\n\r\n    const onSelectSortChange = (event) => {\r\n        setSortOption(event.target.value)\r\n    }\r\n\r\n\r\n\r\n    const errorText = (errorCode, errorInfo = \"\") => {\r\n        switch (errorCode) {\r\n            case \"TIMESLOT_FULL\":\r\n                return \"time slot full please fuck off\"\r\n            case \"NO_VALID_ROLE\":\r\n                return \"you do not have the required role to subscribe to this timeslot please contact the moderator if you think this is an error.\"\r\n            case \"TIME_ERROR\":\r\n                return `The time to cancel your appointment has sadly passed contact the COMBAR in case you really can't tap you need to cancel atleast ${errorInfo} hours in advance`\r\n\r\n            default:\r\n                return <div></div>\r\n        }\r\n    }\r\n\r\n\r\n    var groupBy = function (xs, key) {\r\n        return xs.reduce(function (rv, x) {\r\n            (rv[x[key]] = rv[x[key]] || []).push(x);\r\n            return rv;\r\n        }, {});\r\n    };\r\n\r\n\r\n    if (timeslots && roles.length !== 0 && timeslotCategories.length !== 0 && userInformation.user) {\r\n        const groupedTimeslots = groupBy(timeslots, \"timeslotCategorie\")\r\n        return (\r\n            <div>\r\n                <select onChange={onSelectSortChange} value={sortOption}>\r\n                    {sortOptions.map((option) => {\r\n                        return <option key={option.value} value={option.value}>{option.name}</option>\r\n                    })}\r\n                </select>\r\n                {errorCodeFormatting(timeslotStatus.errorCode, errorText, timeslotStatus.errorInfo)}\r\n\r\n                {\r\n                    Object.keys(groupBy(timeslots, \"timeslotCategorie\")).map((categorie) => {\r\n                        return <ExpansionPanel key={categorie}>\r\n                            <ExpansionPanelSummary\r\n                                id={`${categorie}_panel`}\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                            >\r\n                                <Typography variant=\"h5\" component=\"h2\">\r\n                                    {  checkTimeslotCategorie(timeslotCategories, categorie).title}\r\n                                </Typography>\r\n                            </ExpansionPanelSummary>\r\n\r\n                            <ExpansionPanelDetails>\r\n                                <TimeslotCards timeslots={groupedTimeslots[categorie]} userRoles={userInformation.roles} categories={timeslotCategories} userId={userInformation.user.id} roleList={roles} sortingOption={sortOption} token={token} />\r\n                            </ExpansionPanelDetails>\r\n                        </ExpansionPanel>\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n    return <div></div>\r\n}\r\n\r\nexport default TimeslotList","export const changeLanguage = (language) => {\r\n    return {\r\n        type: \"CHANGE_LANGUAGE\",\r\n        data: {\r\n            language:language\r\n        }\r\n    }\r\n}","import React, { useEffect, useContext } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getUserInformation } from \"../actions/user\"\r\nimport { Link } from 'react-router-dom';\r\nimport { checkRole} from \"../utils/checkRole\"\r\n\r\nimport {changeLanguage} from \"../actions/l18n\"\r\n\r\nimport \"../css/navbar.css\"\r\nimport { languageContext } from '../App';\r\n\r\n\r\nfunction Navbar() {\r\n    const loginInformation = useSelector(state => state.login)\r\n    const translation = useContext(languageContext)\r\n\r\n    const userRoles = useSelector(state => state.user.roles)\r\n    const user = useSelector(state => state.user.user)\r\n    const token = useSelector(state => state.login.token)\r\n    const language= useSelector(state => state.l18n.language)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const loginOrLogout = (loggedIn, translation) =>{\r\n        return loggedIn ? <Link to=\"/logout\" className={\"navbar_link\"}>{translation.logout}</Link> : <Link to=\"/login\" className={\"navbar_link\"}>{translation.login}</Link>\r\n    }\r\n\r\n\r\n    const moderatorLink = (userRoles, translation) => {\r\n        if(checkRole(userRoles, \"userModerator\")) {\r\n            return <li className={\"navbar_list_element\"}><Link to=\"/moderator\" className={\"navbar_link\"}>{translation.moderator}</Link></li>\r\n        }\r\n    }\r\n\r\n    const timeslotLink = (userRoles, chairman, translation) => {\r\n        if(checkRole(userRoles, \"createTimeslot\") || (chairman && chairman.length !== 0)) {\r\n        return <li className={\"navbar_list_element\"}><Link to=\"/timeslot/create\" className={\"navbar_link\"}>{translation.createTimeslot}</Link></li>\r\n        }\r\n    }\r\n\r\n    const multipleTimeslotLink = (userRoles, chairman, translation) => {\r\n        if(checkRole(userRoles, \"createTimeslot\") || (chairman && chairman.length !== 0)) {\r\n        return <li className={\"navbar_list_element\"}><Link to=\"/timeslot/create/multiple\" className={\"navbar_link\"}>{translation.createMultipleTimeslot}</Link></li>\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            dispatch(getUserInformation(token))\r\n        }\r\n    }, [dispatch, token])\r\n\r\n    const onChangeLanguageClick  = (currentLanguage) =>{\r\n        currentLanguage === \"english\" ? dispatch(changeLanguage(\"dutch\")) : dispatch(changeLanguage(\"english\"))\r\n\r\n    }\r\n\r\n    //renders only if there is userinformation\r\n    return (\r\n        <ul className={\"navbar_list\"}>\r\n            <li className={\"navbar_list_element\"}><Link to=\"/\" className={\"navbar_link\"}>{translation.home}</Link></li>\r\n            <li className={\"navbar_log_element\"}> {loginOrLogout(loginInformation.loggedIn, translation)} </li>\r\n            <li className={\"navbar_log_element\"} onClick={()=> onChangeLanguageClick(language)}><div className={\"navbar_link\"}>{translation.otherLanguage}</div></li>\r\n            {loginInformation.loggedIn? moderatorLink(userRoles, translation) : \"\"}\r\n            {loginInformation.loggedIn? user ? timeslotLink(userRoles, user.chairman, translation) : \"\" : \"\"}\r\n            {loginInformation.loggedIn? user ? multipleTimeslotLink(userRoles, user.chairman, translation) : \"\" : \"\"}\r\n\r\n            {loginInformation.loggedIn? <li className={\"navbar_list_element\"}><Link to=\"/timeslot\" className={\"navbar_link\"}>{translation.timeslots}</Link></li> : \"\"}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getUserInformation } from \"../actions/user\"\r\nimport { getUserTimeslots } from '../actions/timeslot';\r\nimport TimeslotCards from \"./TimeslotCards\"\r\nimport { getRoleList } from '../actions/role';\r\nimport { getTimeslotCategorieList } from '../actions/timeslotCategorie';\r\nimport UserInformation from './UserInformation';\r\nfunction FrontPage() {\r\n    const userInformation = useSelector(state => state.user)\r\n    const token = useSelector(state => state.login.token)\r\n    const userTimeslots = useSelector(state => state.timeslot.userTimeslots)\r\n    const timeslotCategories = useSelector(state => state.timeslotCategorie.timeslotCategories)\r\n    const roles = useSelector(state => state.roles)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getUserInformation(token))\r\n        dispatch(getUserTimeslots(token))\r\n        dispatch(getTimeslotCategorieList(token))\r\n        dispatch(getRoleList())\r\n    }, [dispatch, token])\r\n\r\n    //renders only if there is userinformation\r\n    if (userInformation.user && userTimeslots) {\r\n        console.log(userInformation)\r\n        return (\r\n            <div>\r\n                <UserInformation userInformation={userInformation}/>\r\n\r\n                <TimeslotCards timeslots={userTimeslots} userRoles={userInformation.roles.roles} categories={timeslotCategories} userId={userInformation.user.id} roleList={roles} sortingOption={\"startTime\"} token={token} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    //default return\r\n    return (\r\n        <div>Loading....</div>\r\n    )\r\n}\r\n\r\nexport default FrontPage","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addTimeslot } from \"../../actions/timeslot\"\r\n\r\nimport { toTimeString } from \"../../utils/timeFormat\"\r\nimport { errorCodeFormatting } from \"../../utils/errorCodeFormatting\"\r\n\r\nimport { getRoleList } from '../../actions/role';\r\n\r\nimport { Alert } from \"@material-ui/lab\"\r\nimport { getTimeslotCategorieList } from '../../actions/timeslotCategorie';\r\nimport { getUserInformation } from '../../actions/user';\r\nimport { checkRole } from '../../utils/checkRole';\r\n\r\nfunction MultipleTimeslotForm() {\r\n    const token = useSelector(state => state.login.token)\r\n    const roles = useSelector(state => state.roles)\r\n    const userRoles = useSelector(state => state.user.roles)\r\n    const user = useSelector(state => state.user.user)\r\n\r\n    const timeslotCategories = useSelector(state => state.timeslotCategorie.timeslotCategories)\r\n    const errorCode = useSelector(state => state.timeslot.errorCode)\r\n    const successTimeslot = useSelector(state => state.timeslot.succes)\r\n\r\n\r\n    const [description, setDescription] = useState(\"\")\r\n    const [startTime, setStarttime] = useState(new Date())\r\n    const [endTime, setEndTime] = useState(new Date())\r\n    const [maxPeople, setMaxPeople] = useState(1)\r\n    const [roleSelection, setRoleSelection] = useState([])\r\n    const [daySelection, setDaySelection] = useState([])\r\n    const [weekSelection, setWeekSelection] = useState([])\r\n\r\n\r\n    const [categorieSelection, setCategorieSelection] = useState(\"\")\r\n\r\n\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getRoleList())\r\n        dispatch(getTimeslotCategorieList(token))\r\n        dispatch(getUserInformation(token))\r\n    }, [dispatch, token])\r\n\r\n    const handleDescriptionChange = (event) => {\r\n        setDescription(event.target.value)\r\n    }\r\n\r\n    const handleStartTimeTimeChange = (event) => {\r\n        let timeSplitted = event.target.value.split(\":\")\r\n        let tempDate = new Date(startTime.getTime())\r\n\r\n        if (event.target.value !== \"\") {\r\n\r\n            tempDate.setHours(timeSplitted[0])\r\n            tempDate.setMinutes(timeSplitted[1])\r\n            tempDate.setSeconds(0)\r\n            // if the new date start time is later than the end time change the end time to the start time\r\n            if (tempDate >= new Date(endTime.getTime())) {\r\n                setEndTime(tempDate)\r\n            }\r\n            setStarttime(tempDate)\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const handleEndTimeTimeChange = (event) => {\r\n\r\n        let timeSplitted = event.target.value.split(\":\")\r\n        let tempDate = new Date(endTime.getTime())\r\n\r\n        if (event.target.value !== \"\") {\r\n            tempDate.setHours(timeSplitted[0])\r\n            tempDate.setMinutes(timeSplitted[1])\r\n            tempDate.setSeconds(0)\r\n\r\n            setEndTime(tempDate)\r\n        }\r\n    }\r\n\r\n    const handleMaxPeople = (event) => {\r\n        setMaxPeople(event.target.value)\r\n    }\r\n\r\n    const handleRoleSelectionChange = (event) => {\r\n        const roleToSelect = event.target.value\r\n\r\n        if (roleSelection.includes(roleToSelect)) {\r\n            setRoleSelection(roleSelection.filter(role => role !== roleToSelect))\r\n        } else {\r\n            setRoleSelection(roleSelection.concat(event.target.value))\r\n        }\r\n    }\r\n\r\n    const handleDaySelectionChange = (event) => {\r\n        const selectedDay = Number(event.target.value)\r\n\r\n        if (daySelection.includes(selectedDay)) {\r\n            setDaySelection(daySelection.filter(day => day !== selectedDay))\r\n        } else {\r\n            setDaySelection(daySelection.concat(selectedDay))\r\n        }\r\n    }\r\n\r\n    const handleWeekSelectionChange = (event) => {\r\n        const selectedWeek = Number(event.target.value)\r\n\r\n        if (weekSelection.includes(selectedWeek)) {\r\n            setWeekSelection(weekSelection.filter(week => week !== selectedWeek))\r\n        } else {\r\n            setWeekSelection(weekSelection.concat(selectedWeek))\r\n        }\r\n    }\r\n\r\n    const handleCategorieSelectionChange = (event) => {\r\n        setCategorieSelection(event.target.value)\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        //if the categorie is not changed set the first categorie in the list\r\n        const currentDate = new Date()\r\n        currentDate.setDate(currentDate.getDate() - currentDate.getDay())\r\n        currentDate.setHours(0)\r\n        currentDate.setMinutes(0)\r\n        currentDate.setSeconds(0)\r\n        currentDate.setMilliseconds(0)\r\n\r\n        daySelection.sort()\r\n        weekSelection.forEach(week => {\r\n            let date = new Date(currentDate.getTime() + week * 7 * 24 * 60 * 60 * 1000)\r\n\r\n            daySelection.forEach(day => {\r\n                const thisDate = (date.getTime() + day * 24 * 60 * 60 * 1000)\r\n\r\n                const startTimeTemp = new Date(thisDate)\r\n                const endTimeTemp = new Date(thisDate)\r\n\r\n                startTimeTemp.setHours(startTime.getHours())\r\n                startTimeTemp.setMinutes(startTime.getMinutes())\r\n\r\n                endTimeTemp.setHours(endTime.getHours())\r\n                endTimeTemp.setMinutes(endTime.getMinutes())\r\n                console.log(\"send it\")\r\n                if (categorieSelection === \"\" && !categorieSelection) {\r\n                    dispatch(addTimeslot(token,\r\n                        description, startTimeTemp, endTimeTemp,\r\n                        maxPeople, roleSelection, timeslotCategories[0].id))\r\n                } else {\r\n                    dispatch(addTimeslot(token, description, startTimeTemp, endTimeTemp, maxPeople, roleSelection, categorieSelection))\r\n                }\r\n            })\r\n        })\r\n        event.preventDefault()\r\n\r\n    }\r\n\r\n    const errorText = (errorCode) => {\r\n        switch (errorCode) {\r\n            case \"NOT_AUTHORIZED\":\r\n                return \"You are not not authorized to create timeslot\"\r\n            case \"NO_ROLES_ERROR\":\r\n                return \"You have not selected any roles for the timeslot please select one\"\r\n            case \"START_GREATER_END_TIME_ERROR\":\r\n                return \"The start time is earlier than the end time.\"\r\n            default:\r\n                return \"\"\r\n        }\r\n    }\r\n\r\n    const successFormatting = (success) => {\r\n        if (success) {\r\n            return <Alert severity=\"success\">This is a success alert — check it out!</Alert>\r\n        }\r\n        return;\r\n    }\r\n\r\n    const findRoleById = (rolesArray, roleId) => {\r\n        return rolesArray.filter(role => role.id === roleId)[0]\r\n    }\r\n\r\n    //do not delete\r\n    const startTimeTimeString = toTimeString(startTime)\r\n\r\n    const endTimeTimeString = toTimeString(endTime)\r\n\r\n    let chooseRoles = roles.map(role => role.id)\r\n    if (!checkRole(userRoles, \"createTimeslot\")) {\r\n        if (user) {\r\n            chooseRoles = user.chairman\r\n        } else {\r\n            chooseRoles = []\r\n        }\r\n    }\r\n\r\n    const getWeekString = (week) => {\r\n        const currentDate = new Date()\r\n        currentDate.setDate(currentDate.getDate() - currentDate.getDay())\r\n\r\n        const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n        let beginWeek = new Date(currentDate.getTime() + week * 7 * 24 * 60 * 60 * 1000)\r\n        let endweek = new Date(currentDate.getTime() + (week + 1) * 6 * 24 * 60 * 60 * 1000)\r\n\r\n        return (`${months[beginWeek.getMonth()]}, ${beginWeek.getDate()} - ${months[endweek.getMonth()]}, ${endweek.getDate()}`)\r\n    }\r\n\r\n    const dayArray = [\"zondag\", \"maandag\", \"dinsdag\", \"woensdag\", \"donderdag\", \"vrijdag\", \"zaterdag\"]\r\n\r\n    if (roles.length !== 0 && timeslotCategories !== 0) {\r\n        return (\r\n            <div>\r\n                {errorCodeFormatting(errorCode, errorText)}\r\n                {successFormatting(successTimeslot)}\r\n                < form onSubmit={handleSubmit} >\r\n                    <select value={daySelection} onChange={handleDaySelectionChange} multiple={true}>\r\n                        {\r\n                            [0, 1, 2, 3, 4, 5, 6].map((day) => {\r\n                                return <option key={day} value={day}>{dayArray[day]}</option>\r\n                            })\r\n                        }\r\n                    </select>\r\n                    <br />\r\n\r\n                    <select value={weekSelection} onChange={handleWeekSelectionChange} multiple={true}>\r\n                        {\r\n                            [0, 1, 2, 3, 4, 5, 6, 7].map(week => {\r\n                                return <option key={week} value={week}>{getWeekString(week)}</option>\r\n                            })\r\n                        }\r\n                    </select>\r\n                    <br />\r\n\r\n                    description: <input type=\"text\" value={description} onChange={handleDescriptionChange} /> <br />\r\n                    startTime time: <input type=\"time\" value={startTimeTimeString} onChange={handleStartTimeTimeChange} />\r\n                    <br />\r\n                    endTime time: <input type=\"time\" value={endTimeTimeString} onChange={handleEndTimeTimeChange} />\r\n\r\n                    <br />\r\n                     maxPeople: <input type=\"number\" value={maxPeople} onChange={handleMaxPeople} /><br />\r\n                    <select value={roleSelection} onChange={handleRoleSelectionChange} multiple={true}>\r\n                        {\r\n                            chooseRoles.map((role) => {\r\n                                role = findRoleById(roles, role)\r\n                                return <option key={role.id} value={role.id}>{role.abreviation}: {role.description}</option>\r\n                            })\r\n                        }\r\n                    </select>\r\n                    <select value={categorieSelection} onChange={handleCategorieSelectionChange}>\r\n                        {\r\n                            timeslotCategories.map((timeslotCategorie) => {\r\n                                return <option key={timeslotCategorie.id} value={timeslotCategorie.id}>{timeslotCategorie.title} minimum cancel times (hours): {timeslotCategorie.cancelLength}</option>\r\n                            })\r\n                        }\r\n                    </select>\r\n                    <input type=\"submit\" />\r\n                </form >\r\n            </div>\r\n        )\r\n    } else {\r\n        return <div>loading roles</div>\r\n    }\r\n}\r\n\r\nexport default MultipleTimeslotForm","import React, { useEffect, createContext } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { verifyToken, noTokenStorage } from \"./actions/login\"\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch, Route, Redirect\r\n} from \"react-router-dom\"\r\n\r\n//components\r\nimport LoginForm from \"./components/LoginForm\"\r\nimport User from \"./components/Moderator.js\"\r\nimport Logout from \"./components/Logout\"\r\nimport TimeslotForm from './components/TimeslotForm';\r\nimport TimeslotList from './components/listComponents/TimeslotList';\r\nimport Navbar from './components/Navbar';\r\nimport TimeslotCategorieForm from './components/TimeslotCatogorieForm';\r\n\r\nimport translations from \"./translations.json\"\r\nimport FrontPage from './components/FrontPage';\r\nimport MultipleTimeslotForm from './components/forms/MultipleTimeslot';\r\n\r\nexport const languageContext = createContext()\r\n\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch()\r\n\r\n  const language = useSelector(state => state.l18n.language)\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\")\r\n    if (token) {\r\n      dispatch(verifyToken(token))\r\n    } else {\r\n      dispatch(noTokenStorage())\r\n    }\r\n  }, [dispatch])\r\n\r\n  const loginInformation = useSelector(state => state.login)\r\n\r\n  //if no login state is fetched show this\r\n  if (loginInformation.pending) {\r\n    return \"pending....\"\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <languageContext.Provider value={translations[language]}>\r\n        <Navbar></Navbar>\r\n\r\n\r\n        <Switch>\r\n          <Route path=\"/timeslotcategorie/edit/:timeslotCategorieId\"\r\n            component={TimeslotCategorieForm}\r\n          />\r\n          <Route path=\"/login\" render={() =>\r\n            loginInformation.loggedIn ? <Redirect to=\"/\" /> : <LoginForm />\r\n          } />\r\n\r\n          <Route path=\"/timeslot/create/multiple\" render={() =>\r\n            loginInformation.loggedIn ? <MultipleTimeslotForm /> : <Redirect to=\"/login\" />\r\n          } />\r\n          \r\n          <Route path=\"/timeslot/create\" render={() =>\r\n            loginInformation.loggedIn ? <TimeslotForm /> : <Redirect to=\"/login\" />\r\n          } />\r\n\r\n\r\n          <Route path=\"/timeslot\" render={() =>\r\n            loginInformation.loggedIn ? <TimeslotList /> : <Redirect to=\"/login\" />\r\n          } />\r\n\r\n          <Route path=\"/moderator\" render={() =>\r\n            loginInformation.loggedIn ? <User /> : <Redirect to=\"/login\" />\r\n          } />\r\n          <Route path=\"/logout\">\r\n            <Logout />\r\n          </Route>\r\n          <Route path=\"/\" render={() =>\r\n            loginInformation.loggedIn ? <FrontPage /> : <Redirect to=\"/login\" />\r\n          } />\r\n        </Switch>\r\n      </languageContext.Provider>\r\n    </Router>\r\n  );\r\n}\r\nexport default App;\r\n","const defaultState = {\r\n    token: null, \r\n    loggedIn: false,\r\n    pending: true\r\n}\r\n\r\n\r\nconst loginReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case \"LOGIN\":\r\n            return {\r\n                token: action.data.token,\r\n                loggedIn: true,\r\n                pending: false\r\n            }\r\n        case \"NO_TOKEN\":\r\n            return {\r\n                loggedIn: false,\r\n                pending: false,\r\n                token: null\r\n            }\r\n        case \"LOGOUT\":\r\n            return {\r\n                token: null,\r\n                loggedIn: false,\r\n                error: false,\r\n                pending: false\r\n            }\r\n        case \"LOGIN_ERROR\":\r\n            console.log(action.data)\r\n            return {\r\n                loggedIn: false,\r\n                error: true,\r\n                errorCode: action.data.errorCode,\r\n                pending: false\r\n            }\r\n        case \"SERVER_ERROR\":\r\n            return {\r\n                loggedIn: false,\r\n                error: true,\r\n                errorMessage: \"The server may be down, try again later or try to contract the moderator.\",\r\n                pending: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default loginReducer","const roleReducer = (state = [], action) => {\r\n    switch(action.type) {\r\n        case \"ADD_ROLE\" :\r\n            return state.concat(action.data.role)\r\n        case \"ROLE_LIST\" :\r\n            return action.data.roles\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default roleReducer","const defaultState = {\r\n    user: null,\r\n    role: []\r\n}\r\n\r\nconst userReducer = (state = defaultState, action) => {\r\n    switch(action.type) {\r\n        case \"USER_INFORMATION\":\r\n            const user = action.data.user\r\n            return {\r\n                user: {\r\n                    email: user.email,\r\n                    frontName: user.frontName,\r\n                    lastName: user.lastName,\r\n                    id: user.id,\r\n                    chairman: user.chairman\r\n                },\r\n                roles: user.roles\r\n            }\r\n        case \"LOGOUT\":\r\n            return {\r\n                user: null,\r\n                role: []\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default userReducer","const moderatorReducer = (state = [], action) => {\r\n    switch(action.type) {\r\n        case \"USERS_LIST\" :\r\n            return action.data.userList\r\n        case \"ADD_USER\": \r\n            return state.concat(action.data.user)\r\n        case \"TOGGLE_CHAIRMAN\":\r\n        case \"TOGGLE_ROLE\":\r\n            const newState = state.map(user => {\r\n                if(user.id === action.data.user.id) {\r\n                    return action.data.user\r\n                }\r\n                return user\r\n            })\r\n            console.log(newState)\r\n            return newState\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default moderatorReducer","\r\nconst defaultState = {\r\n    timeslots: [],\r\n    errorCode: \"\",\r\n    succes: false,\r\n    errorInfo: \"\",\r\n    userTimeslots: []\r\n}\r\n\r\nconst timeslotReducer = (state = defaultState, action) => {\r\n    switch(action.type) {\r\n        case \"ADD_TIMESLOT\" :\r\n            return { \r\n                ...state,\r\n                timeslots: state.timeslots.concat(action.data.timeslot),\r\n                succes: true\r\n            }\r\n        case \"TIMESLOT_LIST\" :\r\n            return {\r\n                ...state,\r\n                timeslots: action.data.timeslots\r\n            }\r\n        case \"GET_USER_TIMESLOTS\":\r\n            return {\r\n                ...state,\r\n                userTimeslots: action.data.userTimeslots\r\n            }\r\n        case \"SUBSCRIBED_TIMESLOT\":\r\n            const newTimeslots = state.timeslots.map(timeslot => {\r\n                if(timeslot.id === action.data.timeslot.id) {\r\n                    return action.data.timeslot\r\n                }\r\n                return timeslot\r\n            })\r\n            return {\r\n                ...state,\r\n                timeslots: newTimeslots,\r\n                errorCode: \"\"\r\n            }\r\n        case \"DELETE_TIMESLOT\": \r\n            const newTimeslotsDeleted = state.timeslots.filter(timeslot => {\r\n                return timeslot.id !== action.data.timeslotId\r\n            })\r\n            return {\r\n                ...state,\r\n                timeslots: newTimeslotsDeleted,\r\n                errorCode: \"\"\r\n            }\r\n        case \"TIMESLOT_ERROR\":\r\n            return {\r\n                ...state,\r\n                errorCode: action.data.errorCode,\r\n                errorInfo: action.data.errorInfo\r\n            }\r\n        case \"RESET_SUCCES_TIMESLOT\" :\r\n            return {\r\n                ...state,\r\n                succes: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default timeslotReducer","\r\nconst defaultState = {\r\n    timeslotCategories: [],\r\n    timeslotCategorie: null,\r\n    errorCode: \"\",\r\n    succes: false\r\n}\r\n\r\nconst timeslotCategorieReducer = (state = defaultState, action) => {\r\n    switch(action.type) {\r\n        case \"ADD_TIMESLOT_CATEGORIE\" :\r\n            return { \r\n                ...state,\r\n                timeslotCategories: state.timeslotCategories.concat(action.data.timeslotCategorie),\r\n                succes: true,\r\n                errorCode: \"\"\r\n            }            \r\n        case \"TIMESLOT_CATEGORIE_LIST\" :\r\n            return {\r\n                ...state,\r\n                timeslotCategories: action.data.timeslotCategories,\r\n            }\r\n        case \"CHANGE_TIMESLOT_CATEGORIE\":\r\n            const newTimeslotCategories = state.timeslotCategories.map((timeslotCategorie) => {\r\n                if(timeslotCategorie.id === action.data.timeslotCategorie.id) {\r\n                    return action.data.timeslotCategorie\r\n                }\r\n                return timeslotCategorie\r\n            })\r\n            return {\r\n                timeslotCategories: newTimeslotCategories,\r\n                timeslotCategorie: null,\r\n                errorCode: \"\",\r\n                succes: true\r\n            }\r\n        case \"FETCH_ONE_TIMESLOT_CATEGORIE\":\r\n            return {\r\n                ...state, \r\n                timeslotCategorie: action.data.timeslotCategorie\r\n            }\r\n        case \"TIMESLOT_CATEGORIE_ERROR\":\r\n            return {\r\n                ...state,\r\n                errorCode: action.data.errorCode,\r\n                succes: false\r\n            }\r\n        case \"RESET_SUCCES_TIMESLOT_CATEGORIE\" :\r\n            return {\r\n                ...state,\r\n                succes: false,\r\n                errorCode: \"\"\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default timeslotCategorieReducer","const defaultState = {\r\n    language: \"dutch\"\r\n}\r\n\r\nconst l18nReducer = (state = defaultState, action) => {\r\n    switch(action.type) {\r\n        case \"CHANGE_LANGUAGE\" :\r\n            return {\r\n                language: action.data.language\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default l18nReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\n\nimport loginReducer from './reducers/login'\nimport roleReducer from './reducers/role';\nimport userReducer from \"./reducers/user\"\nimport moderatorReducer from './reducers/moderator';\n\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport timeslotReducer from './reducers/timeslot';\nimport timeslotCategorieReducer from './reducers/timeslotCategorie';\nimport l18nReducer from './reducers/l18n';\n\nconst store = createStore(combineReducers({\n  login: loginReducer,\n  roles: roleReducer,\n  user: userReducer,\n  moderator: moderatorReducer,\n  timeslot: timeslotReducer,\n  timeslotCategorie: timeslotCategorieReducer,\n  l18n: l18nReducer\n}),\n  applyMiddleware(thunk)\n)\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}