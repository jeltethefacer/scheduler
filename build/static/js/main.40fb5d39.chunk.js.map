{"version":3,"sources":["actions/login.js","utils/config.js","utils/errorCodeFormatting.js","components/LoginForm.js","actions/user.js","components/UserInformation.js","actions/moderator.js","actions/role.js","components/AddUser.js","components/AddRole.js","components/UserList.js","components/Moderator.js","components/Logout.js","actions/timeslot.js","utils/timeFormat.js","components/TimeslotForm.js","utils/checkRole.js","components/TimeslotList.js","components/Navbar.js","App.js","reducers/login.js","reducers/role.js","reducers/user.js","reducers/moderator.js","reducers/timeslot.js","index.js"],"names":["baseUrl","errorCodeFormatting","errorCode","errorText","Alert","severity","LoginForm","dispatch","useDispatch","useSelector","state","login","history","useHistory","useState","email","setEmail","password","setPassword","onSubmit","event","preventDefault","a","Axios","post","user","userData","data","localStorage","setItem","token","type","response","status","push","value","onChange","target","getUserInformation","get","headers","console","log","UserInformation","userinformation","userRoles","roles","useEffect","frontName","lastName","roleListElements","map","role","key","id","abreviation","description","mapRoles","getRoleList","rolesList","AddUser","setFrontName","setLastName","userEntity","addUser","setAbreviation","setDescription","roleEntity","addRole","UserList","users","moderator","userList","getUsers","rolesArray","roleId","filter","onClick","userId","deleteUser","className","toggleRoleRespone","toggleRole","AddRole","Moderator","Logout","clear","pad","number","formatDateForCard","startDate","endDate","months","toDateString","getHours","getMinutes","getMonth","getDate","getFullYear","date","toTimeString","TimeslotForm","Date","startTime","setStarttime","endTime","setEndTime","maxPeople","setMaxPeople","roleSelection","setRoleSelection","timeslot","successTimeslot","succes","startTimeDateString","startTimeTimeString","endTimeDateString","endTimeTimeString","success","successFormatting","timeslotData","setInterval","addTimeslot","dateSplitted","split","tempDate","getTime","setFullYear","setMonth","setDate","timeSplitted","setHours","setMinutes","roleToSelect","includes","concat","multiple","checkRole","TimeslotList","timeslots","errorCodeTimeslot","classes","makeStyles","theme","root","width","height","useStyles","timeslotsData","getTimeslots","findRoleById","length","Grid","container","direction","justify","alignItems","startTimeDate","endTimeDate","Card","CardHeader","title","subheader","CardContent","spacing","item","xs","md","Typography","variant","List","dense","ListItem","ListItemText","primary","subscribed","color","component","CardActions","ButtonGroup","Button","onDoubleClick","timeslotId","subscribeTimeslot","unSubscribe","deleteTimeslot","mapTimeslots","Navbar","loginInformation","to","loggedIn","moderatorLink","timeslotLink","App","getItem","setToken","pending","process","path","render","defaultState","loginReducer","action","error","errorMessage","roleReducer","userReducer","moderatorReducer","newState","timeslotReducer","newTimeslots","newTimeslotsDeleted","store","createStore","combineReducers","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.40fb5d39.chunk.js","sourcesContent":["import Axios from \"axios\"\r\nimport {config} from \"../utils/config\"\r\n\r\nconst baseUrl = `${config().url}/api/user/login`\r\n\r\nexport const login = (email, password) => {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await Axios.post(baseUrl, { email: email, password: password })\r\n            const userData = user.data\r\n\r\n            localStorage.setItem(\"token\", userData.token)\r\n            dispatch({\r\n                type: \"LOGIN\",\r\n                data: {\r\n                    email: userData.email,\r\n                    token: userData.token\r\n                }\r\n            })\r\n        } catch (error) {\r\n            switch (error.response.status) {\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"LOGIN_ERROR\",\r\n                        data: {\r\n                            errorCode: error.response.data.errorCode\r\n                        }\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const setToken = (token) => {\r\n    return {\r\n        type: \"LOGIN\",\r\n        data: {\r\n            token: token\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    localStorage.clear()\r\n    return {\r\n        type: \"LOGOUT\"\r\n    }\r\n}\r\n\r\nexport const noTokenStorage = () => {\r\n    console.log(\"no storage\")\r\n    return {\r\n        type: \"NO_TOKEN\"\r\n    }\r\n}","export const config = () => {\r\n    if(process.env.NODE_ENV === \"development\") {\r\n        return {\r\n            url : \"http://localhost:3001\"\r\n        }\r\n    }\r\n    return {\r\n        url: \"\"\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {Alert} from '@material-ui/lab';\r\n\r\nexport const errorCodeFormatting = (errorCode, errorText) => {\r\n    if(!errorCode || errorCode === \"\") {\r\n        return;\r\n    }\r\n    return <Alert severity=\"error\">{errorText(errorCode)}</Alert>\r\n}","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { login } from \"../actions/login\"\r\nimport { useHistory } from 'react-router';\r\nimport { errorCodeFormatting } from '../utils/errorCodeFormatting';\r\n\r\nfunction LoginForm() {\r\n    const dispatch = useDispatch()\r\n\r\n    const errorCode = useSelector(state => state.login.errorCode)\r\n\r\n    const history = useHistory()\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const handleEmailChange = (event) => {\r\n        setEmail(event.target.value)\r\n    }\r\n\r\n    const handlePasswordChange = (event) => {\r\n        setPassword(event.target.value)\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        dispatch(login(email, password))\r\n        history.push(\"/\")\r\n        setPassword(\"\")\r\n        setEmail(\"\")\r\n    }\r\n\r\n\r\n    const errorText = (errorCode) => {\r\n        switch (errorCode) {\r\n            case \"INVALID_EMAIL_OR_PASS\":\r\n                return \"The email or password appear to be incorrect.\"\r\n            default:\r\n                return \"\"\r\n        }\r\n    }\r\n\r\n \r\n    return (\r\n        <div>\r\n            {errorCodeFormatting(errorCode, errorText)}\r\n            < form onSubmit={handleSubmit} >\r\n            email: <input type=\"email\" value={email} onChange={handleEmailChange} /> <br />\r\n      password: <input type=\"password\" value={password} onChange={handlePasswordChange} /><br />\r\n            <input type=\"submit\" />\r\n        </form >\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm","import Axios from \"axios\"\r\nimport {config} from \"../utils/config\"\r\n\r\nconst baseUrl = `${config().url}/api/user`\r\n\r\nexport const getUserInformation = (token) => {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await Axios.get(baseUrl, {\r\n                headers: {\r\n                    \"authorization\": `bearer ${token}`\r\n                }\r\n            })\r\n\r\n            const userData = user.data\r\n\r\n            dispatch({\r\n                type: \"USER_INFORMATION\",\r\n                data: {\r\n                    user: userData\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error.response.status)\r\n            switch(error.response.status) {\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"INVALID_TOKEN\"\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n                }\r\n        }\r\n    }\r\n}","import React, {useEffect} from 'react';\r\nimport {useSelector, useDispatch } from 'react-redux'\r\nimport { getUserInformation } from \"../actions/user\"\r\n\r\nfunction UserInformation() {\r\n    const userinformation = useSelector(state => state.user.user)\r\n    const userRoles = useSelector(state => state.user.roles)\r\n    const token = useSelector(state => state.login.token)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getUserInformation(token))\r\n    }, [dispatch, token])\r\n\r\n    const mapRoles = (roles) => {\r\n\r\n        const roleListElements = roles.map((role) => \r\n            <li key={role.id} >{role.abreviation} ({role.description})</li>\r\n        )\r\n    \r\n        return <ul>{roleListElements}</ul>\r\n    }\r\n    \r\n    //renders only if there is userinformation\r\n    if(userinformation) {\r\n        return (\r\n            <div>\r\n                Email: {userinformation.email} \r\n                <hr />\r\n                Hallo {userinformation.frontName} {userinformation.lastName},\r\n                <br/>\r\n                \r\n                je rollen zijn\r\n                {userRoles ? mapRoles(userRoles) : \" loading\"}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    //default return\r\n    return (\r\n        <div>Loading....</div>\r\n    )\r\n}\r\n\r\nexport default UserInformation","import Axios from \"axios\"\r\n\r\nconst baseUrl = 'http://localhost:3001/api/moderator'\r\n\r\nexport const getUsers = (token) => {\r\n    return async dispatch => {\r\n        try {\r\n            const users = await Axios.get(`${baseUrl}/users`, {\r\n                headers: {\r\n                    \"authorization\": `bearer ${token}`\r\n                }\r\n            })\r\n\r\n            const userList = users.data\r\n            dispatch({\r\n                type: \"USERS_LIST\",\r\n                data: {\r\n                    userList: userList\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error.response.status)\r\n            switch (error.response.status) {\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"INVALID_TOKEN\"\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const addUser = (token, email, frontName, lastName) => {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await Axios.post(`${baseUrl}/addUser`,\r\n                {\r\n                    email: email,\r\n                    frontName: frontName,\r\n                    lastName: lastName\r\n                },\r\n                {\r\n                    headers: {\r\n                        \"authorization\": `bearer ${token}`\r\n                    }\r\n                }\r\n            )\r\n            const userEntity = user.data\r\n\r\n            //refresh user list\r\n            dispatch({\r\n                type: \"ADD_USER\",\r\n                data: {\r\n                    user: userEntity\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error.response.data)\r\n            switch (error.response.status) {\r\n                case 400: \r\n                    dispatch({\r\n                        type: \"VALIDATION_ERROR_ADD_USER\",\r\n                        data: error.response.data\r\n                    })\r\n                    break\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"INVALID_TOKEN\"\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteUser = (token, userId) => {\r\n    return async dispatch => {\r\n        try {\r\n            await Axios.post(`${baseUrl}/deleteUser`,\r\n                {\r\n                    userId: userId\r\n                },\r\n                {\r\n                    headers: {\r\n                        \"authorization\": `bearer ${token}`\r\n                    }\r\n                }\r\n            )\r\n            //refresh user list\r\n            dispatch({\r\n                type: \"DELETE_USER_SUCCES\",\r\n            })\r\n        } catch (error) {\r\n            console.log(error.response.data)\r\n            switch (error.response.status) {\r\n                case 400: \r\n                    dispatch({\r\n                        type: \"VALIDATION_ERROR_ADD_USER\",\r\n                        data: error.response.data\r\n                    })\r\n                    break\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"INVALID_TOKEN\"\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const addRole = (token, abreviation, description) => {\r\n    return async dispatch => {\r\n        try {\r\n            const role = await Axios.post(`${baseUrl}/addRole`,\r\n                {\r\n                    abreviation: abreviation,\r\n                    description: description\r\n                },\r\n                {\r\n                    headers: {\r\n                        \"authorization\": `bearer ${token}`\r\n                    }\r\n                }\r\n            )\r\n            const roleEntity = role.data\r\n            console.log(\"addRole\", roleEntity)\r\n            //add role to role list\r\n            dispatch({\r\n                type: \"ADD_ROLE\",\r\n                data: {\r\n                    role : roleEntity\r\n                }    \r\n            })\r\n        } catch (error) {\r\n            switch (error.response.status) {\r\n                case 400: \r\n                    dispatch({\r\n                        type: \"VALIDATION_ERROR_ADD_ROLE\",\r\n                        data: error.response.data\r\n                    })\r\n                    break\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"INVALID_TOKEN\"\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const toggleRole = (token, roleId, userId) => {\r\n    return async dispatch => {\r\n        console.log('lamo')\r\n        try {\r\n            const toggleRoleRespone = await Axios.post(`${baseUrl}/toggleRole`,\r\n                {\r\n                    roleId: roleId,\r\n                    userId: userId\r\n                },\r\n                {\r\n                    headers: {\r\n                        \"authorization\": `bearer ${token}`\r\n                    }\r\n                }\r\n            )\r\n            const roleEntity = toggleRoleRespone.data.role\r\n            const userEntity = toggleRoleRespone.data.user\r\n            console.log(\"addRole\", toggleRoleRespone.data)\r\n            //add role to role list\r\n            dispatch({\r\n                type: \"TOGGLE_ROLE\",\r\n                data: {\r\n                    user : userEntity,\r\n                    role: roleEntity\r\n                }    \r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n            if(!error.response){\r\n                dispatch({\r\n                    type: \"WEIRD_ERROR\"\r\n                })\r\n                return;\r\n            }\r\n\r\n            switch (error.response.status) {\r\n                case 400: \r\n                    dispatch({\r\n                        type: \"VALIDATION_ERROR_ADD_ROLE\",\r\n                        data: error.response.data\r\n                    })\r\n                    break\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"INVALID_TOKEN\"\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}","import Axios from \"axios\"\r\n\r\nimport {config} from \"../utils/config\"\r\n\r\nconst baseUrl = `${config().url}/api/role`\r\n\r\n\r\nexport const getRoleList = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const roles = await Axios.get(`${baseUrl}`)\r\n\r\n            const rolesList = roles.data\r\n            dispatch({\r\n                type: \"ROLE_LIST\",\r\n                data: {\r\n                    roles: rolesList\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error.response.status)\r\n            switch (error.response.status) {\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"INVALID_TOKEN\"\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addUser } from \"../actions/moderator\"\r\n\r\n\r\nfunction AddUser() {\r\n    const dispatch = useDispatch()\r\n\r\n    const token = useSelector(state => state.login.token)\r\n\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [frontName, setFrontName] = useState(\"\")\r\n    const [lastName, setLastName] = useState(\"\")\r\n    const handleEmailChange = (event) => {\r\n        setEmail(event.target.value)\r\n    }\r\n\r\n    const handleFrontNameChange = (event) => {\r\n        setFrontName(event.target.value)\r\n    }\r\n\r\n    const handleLastNameChange = (event) => {\r\n        setLastName(event.target.value)\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        dispatch(addUser(token, email, frontName, lastName))\r\n        setFrontName(\"\")\r\n        setLastName(\"\")\r\n        setEmail(\"\")\r\n    }\r\n    return (\r\n        < form onSubmit={handleSubmit} >\r\n            email: <input type=\"email\" value={email} onChange={handleEmailChange} /> <br />\r\n            front name: <input type=\"text\" value={frontName} onChange={handleFrontNameChange} /><br />\r\n            last name  <input type=\"text\" value={lastName} onChange={handleLastNameChange} /><br />\r\n            <input type=\"submit\" />\r\n        </form >\r\n    )\r\n}\r\n\r\nexport default AddUser","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addRole } from \"../actions/moderator\"\r\n\r\n\r\nfunction AddUser() {\r\n    const dispatch = useDispatch()\r\n\r\n    const token = useSelector(state => state.login.token)\r\n\r\n\r\n    const [abreviation, setAbreviation] = useState(\"\")\r\n    const [description, setDescription] = useState(\"\")\r\n    const handleAbreviationChange = (event) => {\r\n        setAbreviation(event.target.value)\r\n    }\r\n\r\n    const handleDescriptionChange = (event) => {\r\n        setDescription(event.target.value)\r\n    }\r\n\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        dispatch(addRole(token, abreviation, description))\r\n        setAbreviation(\"\")\r\n        setDescription(\"\")\r\n    }\r\n    return (\r\n        < form onSubmit={handleSubmit} >\r\n            abreviation: <input type=\"text\" value={abreviation} onChange={handleAbreviationChange} /> <br />\r\n            description: <input type=\"text\" value={description} onChange={handleDescriptionChange} /><br />\r\n            <input type=\"submit\" />\r\n        </form >\r\n    )\r\n}\r\n\r\nexport default AddUser","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getUsers, deleteUser, toggleRole } from \"../actions/moderator\"\r\nimport { getRoleList } from \"../actions/role\"\r\nimport \"../css/dropdown.css\"\r\n\r\nimport AddUser from \"./AddUser\"\r\nimport AddRole from \"./AddRole\"\r\n\r\nfunction UserList() {\r\n    const dispatch = useDispatch()\r\n\r\n    const users = useSelector(state => state.moderator)\r\n    const token = useSelector(state => state.login.token)\r\n    const roles = useSelector(state => state.roles)\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            dispatch(getUsers(token))\r\n            dispatch(getRoleList())\r\n        }\r\n    }, [dispatch, token])\r\n\r\n\r\n    \r\n\r\n    const findRoleById = (rolesArray, roleId) => {\r\n        return rolesArray.filter(role => role.id === roleId)[0]\r\n    }\r\n\r\n    function mapUsers() {\r\n        return (\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>front name</th>\r\n                        <th>Last name</th>\r\n                        <th>Email</th>\r\n                        <th>ID</th>\r\n                        <th>roles</th>\r\n\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        users.map(user => <tr key={user.id}>\r\n                            <td>{user.frontName}</td>\r\n                            <td>{user.lastName}</td>\r\n                            <td>{user.email}</td>\r\n                            <td>{user.id}</td>\r\n                            <td>{user.roles.map(role => <div key={role}>{findRoleById(roles, role).abreviation}</div>)}</td>\r\n                            <td><button onClick={() => dispatch(deleteUser(token, user.id))}>Delete User</button></td>\r\n                            <td>\r\n                                <div className=\"dropdown\">\r\n                                    <button className=\"dropbtn\">Dropdown</button>\r\n                                    <div className=\"dropdown-content\">\r\n                                        {roles.map(role => <button key={role.id} onClick={() => dispatch(toggleRole(token, role.id, user.id))}>{role.abreviation}</button>)}\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </td>\r\n                        </tr>)\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n\r\n    if (users && roles) {\r\n        return (\r\n            <div>\r\n\r\n                {mapUsers()}\r\n                <AddUser />\r\n                <AddRole />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return <div></div>\r\n}\r\n\r\nexport default UserList","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getUserInformation } from \"../actions/user\"\r\n\r\nimport UserInformation from \"./UserInformation\"\r\nimport UserList from \"./UserList\"\r\n\r\nfunction Moderator() {\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(state => state.login.token)\r\n\r\n    useEffect(() => {\r\n        dispatch(getUserInformation(token))\r\n    }, [dispatch, token])\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <UserInformation/>\r\n            <UserList/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Moderator","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux'\r\nimport { logout } from \"../actions/login\"\r\nimport { useHistory } from 'react-router';\r\n\r\nfunction Logout() {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        dispatch(logout())\r\n        history.push(\"/\")\r\n    }, [dispatch, history])\r\n\r\n    return (\r\n        <div>logout</div>\r\n    )\r\n}\r\n\r\nexport default Logout","import Axios from \"axios\"\r\nimport {config} from \"../utils/config\"\r\n\r\nconst baseUrl = `${config().url}/api/timeslot`\r\n\r\nexport const addTimeslot = (token, description, startTime, endTime, maxPeople, roles) => {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await Axios.post(`${baseUrl}`,\r\n                {\r\n                    description: description,\r\n                    startTime: startTime,\r\n                    endTime: endTime,\r\n                    maxPeople: maxPeople,\r\n                    roles: roles\r\n                },\r\n                {\r\n                    headers: {\r\n                        \"authorization\": `bearer ${token}`\r\n                    }\r\n                }\r\n            )\r\n            const timeslotData = user.data\r\n\r\n            setInterval(() => {\r\n                dispatch({\r\n                    type: \"RESET_SUCCES_TIMESLOT\"\r\n                })\r\n            }, 5000)\r\n\r\n            //refresh user list\r\n            dispatch({\r\n                type: \"ADD_TIMESLOT\",\r\n                data: {\r\n                    timeslot: timeslotData\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n            \r\n            switch (error.response.status) {\r\n                case 400: \r\n                    dispatch({\r\n                        type: \"TIMESLOT_ERROR\",\r\n                        data: {\r\n                            errorCode: error.response.data.errorCode\r\n                        } \r\n                    })\r\n                    break\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"TIMESLOT_ERROR\",\r\n                        data: {\r\n                            errorCode: error.response.data.errorCode\r\n                        }\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const getTimeslots = (token) => {\r\n    return async dispatch => {\r\n        try {\r\n            const timeslots = await Axios.get(`${baseUrl}`,\r\n                {\r\n                    headers: {\r\n                        \"authorization\": `bearer ${token}`\r\n                    }\r\n                }\r\n            )\r\n            const timeslotsData = timeslots.data\r\n\r\n            //refresh user list\r\n            dispatch({\r\n                type: \"TIMESLOT_LIST\",\r\n                data: {\r\n                    timeslots: timeslotsData\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error.response.data)\r\n            switch (error.response.status) {\r\n                case 400: \r\n                    dispatch({\r\n                        type: \"VALIDATION_ERROR_TIMESLOT\",\r\n                        data: error.response.data\r\n                    })\r\n                    break\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"INVALID_TOKEN\"\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const subscribeTimeslot = (token, timeslotId) => {\r\n    return async dispatch => {\r\n        try {\r\n            const timeslot = await Axios.post(`${baseUrl}/subscribe`,\r\n                {\r\n                    timeslotId: timeslotId\r\n                },\r\n                {\r\n                    headers: {\r\n                        \"authorization\": `bearer ${token}`\r\n                    }\r\n                }\r\n            )\r\n            const timeslotData = timeslot.data\r\n\r\n            //refresh user list\r\n            dispatch({\r\n                type: \"SUBSCRIBED_TIMESLOT\",\r\n                data: {\r\n                    timeslot: timeslotData\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error.response.data)\r\n            switch (error.response.status) {\r\n                case 400: \r\n                    dispatch({\r\n                        type: \"TIMESLOT_ERROR\",\r\n                        data: error.response.data\r\n                    })\r\n                    break\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"INVALID_TOKEN\"\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const unSubscribe = (token, timeslotId) => {\r\n    return async dispatch => {\r\n        try {\r\n            const timeslot = await Axios.post(`${baseUrl}/unsubscribe`,\r\n                {\r\n                    timeslotId: timeslotId\r\n                },\r\n                {\r\n                    headers: {\r\n                        \"authorization\": `bearer ${token}`\r\n                    }\r\n                }\r\n            )\r\n            const timeslotData = timeslot.data\r\n\r\n            //unsubscribe redux is same as subscribe redux maybe change name in future?\r\n            dispatch({\r\n                type: \"SUBSCRIBED_TIMESLOT\",\r\n                data: {\r\n                    timeslot: timeslotData\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n            switch (error.response.status) {\r\n                case 400: \r\n                    dispatch({\r\n                        type: \"TIMESLOT_ERROR\",\r\n                        data: error.response.data\r\n                    })\r\n                    break\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"INVALID_TOKEN\"\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteTimeslot = (token, timeslotId) => {\r\n    return async dispatch => {\r\n        try {\r\n            await Axios.post(`${baseUrl}/delete`,\r\n                {\r\n                    timeslotId: timeslotId\r\n                },\r\n                {\r\n                    headers: {\r\n                        \"authorization\": `bearer ${token}`\r\n                    }\r\n                }\r\n            )\r\n\r\n            //unsubscribe redux is same as subscribe redux maybe change name in future?\r\n            dispatch({\r\n                type: \"DELETE_TIMESLOT\",\r\n                data: {\r\n                    timeslotId: timeslotId \r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n            switch (error.response.status) {\r\n                case 400: \r\n                    dispatch({\r\n                        type: \"TIMESLOT_ERROR\",\r\n                        data: error.response.data\r\n                    })\r\n                    break\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"INVALID_TOKEN\"\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}","function pad(number) {\r\n    if (number < 10) {\r\n      return '0' + number;\r\n    }\r\n    return number;\r\n}\r\n\r\nexport const formatDateForCard = (startDate, endDate) => {\r\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n    \r\n    if (toDateString(startDate) === toDateString(endDate)) {\r\n        return `${pad(startDate.getHours())}:${pad(startDate.getMinutes())}-${pad(endDate.getHours())}:${pad(endDate.getMinutes())} ${months[startDate.getMonth()]}, ${startDate.getDate()} ${startDate.getFullYear()}`\r\n    }\r\n\r\n    if(startDate.getFullYear() === endDate.getFullYear()) {\r\n        return `${months[startDate.getMonth()]}, ${startDate.getDate()} ${pad(startDate.getHours())}:${pad(startDate.getMinutes())}-${months[endDate.getMonth()]}, ${endDate.getDate()} ${pad(endDate.getHours())}:${pad(endDate.getMinutes())}`\r\n    }\r\n    return `${months[startDate.getMonth()]}, ${startDate.getDate()} ${startDate.getFullYear()}, ${pad(startDate.getHours())}:${pad(startDate.getMinutes())}-${months[endDate.getMonth()]}, ${endDate.getDate()} ${endDate.getFullYear()}, ${pad(endDate.getHours())}:${pad(endDate.getMinutes())}`\r\n}\r\n\r\nexport const toDateString = (date) => {\r\n    return `${date.getFullYear()}-${pad(date.getMonth() + 1)}-${pad(date.getDate())}`\r\n}\r\n\r\nexport const toTimeString = (date) => {\r\n    return `${pad(date.getHours())}:${pad(date.getMinutes())}`\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addTimeslot } from \"../actions/timeslot\"\r\n\r\nimport { toDateString, toTimeString } from \"../utils/timeFormat\"\r\nimport {errorCodeFormatting} from \"../utils/errorCodeFormatting\"\r\n\r\nimport { getRoleList } from '../actions/role';\r\n\r\nimport {Alert} from \"@material-ui/lab\"\r\n\r\nfunction TimeslotForm() {\r\n\r\n\r\n\r\n    const [description, setDescription] = useState(\"\")\r\n    const [startTime, setStarttime] = useState(new Date())\r\n    const [endTime, setEndTime] = useState(new Date())\r\n    const [maxPeople, setMaxPeople] = useState(1)\r\n    const [roleSelection, setRoleSelection] = useState([])\r\n\r\n    const token = useSelector(state => state.login.token)\r\n    const roles = useSelector(state => state.roles)\r\n    const errorCode = useSelector(state => state.timeslot.errorCode)\r\n    const successTimeslot = useSelector(state => state.timeslot.succes)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        console.log(\"reload roles\")\r\n\r\n        dispatch(getRoleList())\r\n    }, [dispatch])\r\n\r\n    const handleDescriptionChange = (event) => {\r\n        setDescription(event.target.value)\r\n    }\r\n\r\n    const handleStartTimeDateChange = (event) => {\r\n        const dateSplitted = event.target.value.split(\"-\")\r\n        let tempDate = new Date(startTime.getTime())\r\n        if (event.target.value !== \"\") {\r\n            tempDate.setFullYear(dateSplitted[0])\r\n            tempDate.setMonth(dateSplitted[1] - 1)\r\n            tempDate.setDate(dateSplitted[2])\r\n\r\n            console.log(tempDate)\r\n\r\n            setStarttime(tempDate)\r\n        }\r\n    }\r\n\r\n    const handleStartTimeTimeChange = (event) => {\r\n        let timeSplitted = event.target.value.split(\":\")\r\n        let tempDate = new Date(startTime.getTime())\r\n\r\n        if (event.target.value !== \"\") {\r\n            console.log(timeSplitted, event.target.value, \"testing\")\r\n\r\n            tempDate.setHours(timeSplitted[0])\r\n            tempDate.setMinutes(timeSplitted[1])\r\n\r\n            setStarttime(tempDate)\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const handleEndTimeDateChange = (event) => {\r\n        const dateSplitted = event.target.value.split(\"-\")\r\n        let tempDate = new Date(endTime.getTime())\r\n        if (event.target.value !== \"\") {\r\n            tempDate.setFullYear(dateSplitted[0])\r\n            tempDate.setMonth(dateSplitted[1] - 1)\r\n            tempDate.setDate(dateSplitted[2])\r\n\r\n            setEndTime(tempDate)\r\n        }\r\n    }\r\n\r\n    const handleEndTimeTimeChange = (event) => {\r\n\r\n        let timeSplitted = event.target.value.split(\":\")\r\n        let tempDate = new Date(endTime.getTime())\r\n\r\n        if (event.target.value !== \"\") {\r\n            tempDate.setHours(timeSplitted[0])\r\n            tempDate.setMinutes(timeSplitted[1])\r\n\r\n            setEndTime(tempDate)\r\n        }\r\n    }\r\n\r\n    const handleMaxPeople = (event) => {\r\n        setMaxPeople(event.target.value)\r\n    }\r\n\r\n    const handleRoleSelectionChange = (event) => {\r\n        const roleToSelect = event.target.value\r\n\r\n        if (roleSelection.includes(roleToSelect)) {\r\n            console.log(\"lmao\")\r\n            setRoleSelection(roleSelection.filter(role => role !== roleToSelect))\r\n        } else {\r\n            setRoleSelection(roleSelection.concat(event.target.value))\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        console.log(startTime)\r\n        dispatch(addTimeslot(token, description, startTime, endTime, maxPeople, roleSelection))\r\n        event.preventDefault()\r\n\r\n    }\r\n\r\n    const errorText = (errorCode) => {\r\n        switch (errorCode) {\r\n            case \"NOT_AUTHORIZED\":\r\n                return \"You are not not authorized to create timeslot\"\r\n            default:\r\n                return \"\"\r\n        }\r\n    }\r\n\r\n    const successFormatting = (success) => {\r\n        if(success) {\r\n            return <Alert severity=\"success\">This is a success alert — check it out!</Alert>\r\n        }\r\n        return;\r\n    }\r\n    //do not delete\r\n    const startTimeDateString = toDateString(startTime)\r\n    const startTimeTimeString = toTimeString(startTime)\r\n\r\n    const endTimeDateString = toDateString(endTime)\r\n    const endTimeTimeString = toTimeString(endTime)\r\n    console.log(errorCode)\r\n    if (roles) {\r\n        return (\r\n            <div>\r\n                {errorCodeFormatting(errorCode, errorText)}\r\n                {successFormatting(successTimeslot)}\r\n                < form onSubmit={handleSubmit} >\r\n                    description: <input type=\"text\" value={description} onChange={handleDescriptionChange} /> <br />\r\n                    startTime date: <input type=\"date\" value={startTimeDateString} onChange={handleStartTimeDateChange} />\r\n                    startTime time: <input type=\"time\" value={startTimeTimeString} onChange={handleStartTimeTimeChange} />\r\n                    <br />\r\n                    endTime date: <input type=\"date\" value={endTimeDateString} onChange={handleEndTimeDateChange} />\r\n                    endTime time: <input type=\"time\" value={endTimeTimeString} onChange={handleEndTimeTimeChange} />\r\n\r\n                    <br />\r\n                     maxPeople: <input type=\"number\" value={maxPeople} onChange={handleMaxPeople} /><br />\r\n                    <select value={roleSelection} onChange={handleRoleSelectionChange} multiple={true}>\r\n                        {\r\n                            roles.map((role) => {\r\n                                return <option key={role.id} value={role.id}>{role.abreviation}: {role.description}</option>\r\n                            })\r\n                        }\r\n                    </select>\r\n                    <input type=\"submit\" />\r\n                </form >\r\n            </div>\r\n        )\r\n    } else {\r\n        return <div>loading roles</div>\r\n    }\r\n}\r\n\r\nexport default TimeslotForm","export const checkRole = (userRoles, checkRole) => {\r\n    for (const user in userRoles){\r\n        if(userRoles[user].abreviation === checkRole) {\r\n            return true\r\n        }\r\n    }\r\n    return false\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getTimeslots, subscribeTimeslot, unSubscribe , deleteTimeslot} from '../actions/timeslot';\r\nimport { getRoleList } from '../actions/role';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, CardHeader, CardContent, Typography, CardActions, Button, Grid, List, ListItem, ListItemText, ButtonGroup } from '@material-ui/core';\r\n\r\nimport { formatDateForCard } from \"../utils/timeFormat\"\r\nimport { errorCodeFormatting } from '../utils/errorCodeFormatting';\r\nimport { getUserInformation } from '../actions/user';\r\nimport { checkRole } from '../utils/checkRole';\r\n\r\n\r\nfunction TimeslotList() {\r\n    const dispatch = useDispatch()\r\n\r\n    const timeslots = useSelector(state => state.timeslot.timeslots)\r\n    const roles = useSelector(state => state.roles)\r\n    const userRoles = useSelector(state => state.user.roles)\r\n\r\n\r\n    const errorCodeTimeslot = useSelector(state => state.timeslot.errorCode)\r\n    const token = useSelector(state => state.login.token)\r\n\r\n\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            width: 400,\r\n            height: 200,\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            dispatch(getTimeslots(token))\r\n            dispatch(getRoleList(token))\r\n            dispatch(getUserInformation(token))\r\n        }\r\n    }, [dispatch, token])\r\n\r\n    const mapTimeslots = (timeslots, roles) => {\r\n        return <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"flex-start\"\r\n            alignItems=\"center\"\r\n        >\r\n            {timeslots.map(timeslot => {\r\n                const startTimeDate = new Date(timeslot.startTime)\r\n                const endTimeDate = new Date(timeslot.endTime)\r\n  \r\n                const returnElement = \r\n                <Card key={timeslot.id}>\r\n                    <CardHeader title={formatDateForCard(startTimeDate, endTimeDate)} subheader={timeslot.description} className={classes.root} />\r\n                    <CardContent>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} md={6}>\r\n                                <Typography variant=\"h6\" className={classes.title}>\r\n                                    Roles\r\n                                </Typography>\r\n                                <List dense={true}>\r\n                                    {timeslot.roles.map((roleId) => {\r\n                                        const role = findRoleById(roles, roleId)\r\n\r\n                                        return <ListItem key={roleId}>\r\n                                            <ListItemText\r\n                                                primary={role.abreviation}\r\n                                            />\r\n                                        </ListItem>\r\n                                    })}\r\n                                </List>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <Typography variant=\"h6\" className={classes.title}>\r\n                                    Users\r\n                                </Typography>\r\n                                <List dense={true}>\r\n                                    {timeslot.subscribed.map((userId) => {\r\n\r\n                                        return <ListItem key={userId}>\r\n                                            <ListItemText\r\n                                                primary={userId}\r\n                                            />\r\n                                        </ListItem>\r\n                                    })}\r\n                                </List>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            {`${timeslot.subscribed.length}/${timeslot.maxPeople}`}<br />\r\n                        </Typography>\r\n\r\n                    </CardContent>\r\n\r\n                    <CardActions>\r\n                        <ButtonGroup>\r\n                            <Button onDoubleClick={() =>  dispatch(subscribeTimeslot(token, timeslot.id)) } color=\"primary\">\r\n                                Meld mij aan\r\n                            </Button>\r\n                            <Button onDoubleClick={() =>  dispatch(unSubscribe(token, timeslot.id))       } color=\"secondary\">\r\n                                unSubscribe\r\n                            </Button>\r\n                            {checkRole(userRoles, \"createTimeslots\") ? <Button onDoubleClick={() =>  dispatch(deleteTimeslot(token, timeslot.id))       } color=\"secondary\">\r\n                                delete\r\n                            </Button> : \"\"}\r\n                        </ButtonGroup>\r\n                    </CardActions>\r\n                </Card>\r\n\r\n                return returnElement\r\n            })}\r\n        </Grid>\r\n    }\r\n\r\n    const errorText = (errorCode) => {\r\n        switch (errorCode) {\r\n            case \"TIMESLOT_FULL\":\r\n                return \"time slot full please fuck off\"\r\n            case \"NO_VALID_ROLE\":\r\n                return \"you do not have the required role to subscribe to this timeslot please contact the moderator if you think this is an error.\"\r\n            default:\r\n                return <div></div>\r\n        }\r\n    }\r\n\r\n    const findRoleById = (rolesArray, roleId) => {\r\n        return rolesArray.filter(role => role.id === roleId)[0]\r\n    }\r\n\r\n    if (timeslots && roles.length !== 0) {\r\n        return (\r\n            <div>\r\n                {errorCodeFormatting(errorCodeTimeslot, errorText)}\r\n                {mapTimeslots(timeslots, roles)}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return <div></div>\r\n}\r\n\r\nexport default TimeslotList","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getUserInformation } from \"../actions/user\"\r\nimport { Link } from 'react-router-dom';\r\nimport { checkRole} from \"../utils/checkRole\"\r\n\r\nimport \"../css/navbar.css\"\r\n\r\n\r\nfunction Navbar() {\r\n\r\n    const loginInformation = useSelector(state => state.login)\r\n\r\n\r\n    const userRoles = useSelector(state => state.user.roles)\r\n    const token = useSelector(state => state.login.token)\r\n    const dispatch = useDispatch()\r\n\r\n    const loginOrLogout = (loggedIn) =>{\r\n        return loggedIn ? <Link to=\"/logout\" className={\"navbar_link\"}>logout</Link> : <Link to=\"/login\" className={\"navbar_link\"}>login</Link>\r\n    }\r\n\r\n\r\n    const moderatorLink = (userRoles) => {\r\n        if(checkRole(userRoles, \"userModerator\")) {\r\n            return <li className={\"navbar_list_element\"}><Link to=\"/moderator\" className={\"navbar_link\"}>moderator</Link></li>\r\n        }\r\n    }\r\n\r\n    const timeslotLink = (userRoles) => {\r\n        if(checkRole(userRoles, \"createTimeslots\")) {\r\n            return <li className={\"navbar_list_element\"}><Link to=\"/timeslot/create\" className={\"navbar_link\"}>create Timeslot</Link></li>\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            dispatch(getUserInformation(token))\r\n        }\r\n    }, [dispatch, token])\r\n\r\n\r\n    //renders only if there is userinformation\r\n\r\n    return (\r\n        <ul className={\"navbar_list\"}>\r\n            <li className={\"navbar_list_element\"}><Link to=\"/\" className={\"navbar_link\"}>home </Link></li>\r\n            <li className={\"navbar_log_element\"}> {loginOrLogout(loginInformation.loggedIn)} </li>\r\n            {loginInformation.loggedIn? moderatorLink(userRoles) : \"\"}\r\n            {loginInformation.loggedIn? timeslotLink(userRoles) : \"\"}\r\n            {loginInformation.loggedIn? <li className={\"navbar_list_element\"}><Link to=\"/timeslot\" className={\"navbar_link\"}>timeslots</Link></li> : \"\"}\r\n        </ul>\r\n    )\r\n\r\n\r\n\r\n}\r\n\r\nexport default Navbar","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setToken, noTokenStorage} from \"./actions/login\"\n\nimport {\n  BrowserRouter as Router,\n  Switch, Route, Redirect\n} from \"react-router-dom\"\n\n//components\nimport LoginForm from \"./components/LoginForm\"\nimport User from \"./components/Moderator.js\"\nimport Logout from \"./components/Logout\"\nimport TimeslotForm from './components/TimeslotForm';\nimport TimeslotList from './components/TimeslotList';\nimport UserInformation from './components/UserInformation';\nimport Navbar from './components/Navbar';\n\n\n\nfunction App() {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\")\n    if (token) {\n      dispatch(setToken(token))\n    } else {\n      dispatch(noTokenStorage())\n    }\n\n  }, [dispatch])\n\n  const loginInformation = useSelector(state => state.login)\n\n  //if no login state is fetched show this\n  if (loginInformation.pending) {\n    return \"pending....\"\n  }\n\n  console.log(\"Production is \", process.env.NODE_ENV)\n\n  return (\n      <Router>\n\n        <Navbar></Navbar>\n\n\n        <Switch>\n          <Route path=\"/login\" render={() =>\n            loginInformation.loggedIn ? <Redirect to=\"/user\" /> : <LoginForm />\n          } />\n\n          <Route path=\"/timeslot/create\" render={() =>\n            loginInformation.loggedIn ? <TimeslotForm /> : <Redirect to=\"/login\" />\n          } />\n\n          <Route path=\"/timeslot\" render={() =>\n            loginInformation.loggedIn ? <TimeslotList /> : <Redirect to=\"/login\" />\n          } />\n\n          <Route path=\"/moderator\" render={() =>\n            loginInformation.loggedIn ? <User /> : <Redirect to=\"/login\" />\n          } />\n          <Route path=\"/logout\">\n            <Logout />\n          </Route>\n          <Route path=\"/\" render={() =>\n            loginInformation.loggedIn ? <UserInformation /> : <Redirect to=\"/login\" />\n          } />\n        </Switch>\n\n\n      </Router>\n  );\n}\n\nexport default App;\n","const defaultState = {\r\n    loggedIn: false,\r\n    pending: true\r\n}\r\n\r\n\r\nconst loginReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case \"LOGIN\":\r\n            return {\r\n                token: action.data.token,\r\n                loggedIn: true,\r\n                pending: false\r\n            }\r\n        case \"NO_TOKEN\":\r\n            return {\r\n                loggedIn: false,\r\n                pending: false\r\n            }\r\n        case \"LOGOUT\":\r\n            return {\r\n                loggedIn: false,\r\n                error: false,\r\n                pending: false\r\n            }\r\n        case \"LOGIN_ERROR\":\r\n            console.log(action.data)\r\n            return {\r\n                loggedIn: false,\r\n                error: true,\r\n                errorCode: action.data.errorCode,\r\n                pending: false\r\n            }\r\n        case \"SERVER_ERROR\":\r\n            return {\r\n                loggedIn: false,\r\n                error: true,\r\n                errorMessage: \"The server may be down, try again later or try to contract the moderator.\",\r\n                pending: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default loginReducer","const roleReducer = (state = [], action) => {\r\n    switch(action.type) {\r\n        case \"ADD_ROLE\" :\r\n            return state.concat(action.data.role)\r\n        case \"ROLE_LIST\" :\r\n            return action.data.roles\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default roleReducer","const defaultState = {\r\n    user: null,\r\n    role: []\r\n}\r\n\r\nconst userReducer = (state = defaultState, action) => {\r\n    switch(action.type) {\r\n        case \"USER_INFORMATION\":\r\n            const user = action.data.user\r\n\r\n            return {\r\n                user: {\r\n                    email: user.email,\r\n                    frontName: user.frontName,\r\n                    lastName: user.lastName,\r\n                    id: user.id\r\n                },\r\n                roles: user.roles\r\n            }\r\n        case \"LOGOUT\":\r\n            return {\r\n                user: null,\r\n                role: []\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default userReducer","const moderatorReducer = (state = [], action) => {\r\n    switch(action.type) {\r\n        case \"USERS_LIST\" :\r\n            return action.data.userList\r\n        case \"ADD_USER\": \r\n            return state.concat(action.data.user)\r\n        case \"TOGGLE_ROLE\":\r\n            const newState = state.map(user => {\r\n                console.log(user.id, action.data.user.id) \r\n\r\n                if(user.id === action.data.user.id) {\r\n                    return action.data.user\r\n                }\r\n                return user\r\n            })\r\n            console.log(newState)\r\n            return newState\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default moderatorReducer","\r\nconst defaultState = {\r\n    timeslots: [],\r\n    errorCode: \"\",\r\n    succes: false\r\n}\r\n\r\nconst timeslotReducer = (state = defaultState, action) => {\r\n    switch(action.type) {\r\n        case \"ADD_TIMESLOT\" :\r\n            return { \r\n                ...state,\r\n                timeslots: state.timeslots.concat(action.data.timeslot),\r\n                succes: true\r\n            }\r\n        case \"TIMESLOT_LIST\" :\r\n            return {\r\n                ...state,\r\n                timeslots: action.data.timeslots\r\n            }\r\n        case \"SUBSCRIBED_TIMESLOT\":\r\n            const newTimeslots = state.timeslots.map(timeslot => {\r\n                if(timeslot.id === action.data.timeslot.id) {\r\n                    return action.data.timeslot\r\n                }\r\n                return timeslot\r\n            })\r\n            return {\r\n                ...state,\r\n                timeslots: newTimeslots,\r\n                errorCode: \"\"\r\n            }\r\n        case \"DELETE_TIMESLOT\": \r\n            const newTimeslotsDeleted = state.timeslots.filter(timeslot => {\r\n                return timeslot.id !== action.data.timeslotId\r\n            })\r\n            return {\r\n                ...state,\r\n                timeslots: newTimeslotsDeleted,\r\n                errorCode: \"\"\r\n            }\r\n        case \"TIMESLOT_ERROR\":\r\n            return {\r\n                ...state,\r\n                errorCode: action.data.errorCode\r\n            }\r\n        case \"RESET_SUCCES_TIMESLOT\" :\r\n            return {\r\n                ...state,\r\n                succes: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default timeslotReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\n\n\nimport loginReducer from './reducers/login'\nimport roleReducer from './reducers/role';\nimport userReducer from \"./reducers/user\"\nimport moderatorReducer from './reducers/moderator';\n\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport timeslotReducer from './reducers/timeslot';\n\nconst store = createStore(combineReducers({\n  login: loginReducer,\n  roles: roleReducer,\n  user: userReducer,\n  moderator: moderatorReducer,\n  timeslot: timeslotReducer\n}),\n  applyMiddleware(thunk)\n)\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}