{"version":3,"sources":["actions/login.js","utils/config.js","utils/errorCodeFormatting.js","components/LoginForm.js","actions/user.js","components/UserInformation.js","actions/moderator.js","actions/role.js","components/UserList.js","actions/timeslotCategorie.js","components/TimeslotCatogorieForm.js","components/AddUser.js","components/RoleList.js","components/AddRole.js","components/TimeslotCategorieList.js","components/Moderator.js","components/Logout.js","actions/timeslot.js","utils/timeFormat.js","utils/checkRole.js","components/TimeslotForm.js","components/TimeslotCards.js","components/TimeslotList.js","components/Navbar.js","App.js","reducers/login.js","reducers/role.js","reducers/user.js","reducers/moderator.js","reducers/timeslot.js","reducers/timeslotCategorie.js","index.js"],"names":["baseUrl","errorCodeFormatting","errorCode","errorText","errorInfo","Alert","severity","LoginForm","dispatch","useDispatch","useSelector","state","login","history","useHistory","useState","email","setEmail","password","setPassword","onSubmit","event","preventDefault","a","Axios","post","user","userData","data","localStorage","setItem","token","type","response","status","push","value","onChange","target","getUserInformation","get","headers","console","log","UserInformation","userinformation","userRoles","roles","useEffect","frontName","lastName","roleListElements","map","role","key","id","abreviation","description","mapRoles","getRoleList","rolesList","UserList","users","moderator","userList","getUsers","findRoleById","rolesArray","roleId","filter","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","onClick","userId","deleteUser","className","toggleRoleRespone","roleEntity","userEntity","toggleRole","chairman","toggleChairmanResponse","erroCode","toggleChairman","getTimeslotCategorieList","timeslotCategorie","categoriesEtity","timeslotCategories","TimeslotCategorieForm","timeslotCategorieState","title","setTitle","cancelLength","setCancelLength","subscribeLength","setSubscribeLength","categorieEntity","addTimeslotCategorie","min","Number","AddUser","setFrontName","setLastName","addUser","RoleList","setAbreviation","setDescription","addRole","Button","variant","color","TimeslotCategorieList","timeslot","mapTimeslotCategories","Moderator","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","AddRole","Logout","clear","addTimeslot","startTime","endTime","maxPeople","timeslotData","setTimeout","pad","number","formatDateForCard","startDate","endDate","months","toDateString","getHours","getMinutes","getMonth","getDate","getFullYear","date","toTimeString","checkRole","checkTimeslotCategorie","categorieList","categorieId","index","TimeslotForm","successTimeslot","succes","Date","setStarttime","setEndTime","setMaxPeople","roleSelection","setRoleSelection","categorieSelection","setCategorieSelection","startTimeDateString","startTimeTimeString","endTimeDateString","endTimeTimeString","chooseRoles","length","success","successFormatting","dateSplitted","split","tempDate","getTime","setFullYear","setMonth","setDate","timeSplitted","setHours","setMinutes","setSeconds","roleToSelect","includes","concat","multiple","TimeslotCards","timeslots","categories","roleList","sortingOption","classes","makeStyles","theme","root","width","height","useStyles","sorted","sortOption","sort","firstTimeslot","secondTimeslot","subscribed","sortTimeslot","Grid","container","direction","justify","alignItems","startTimeDate","endTimeDate","Card","CardHeader","subheader","CardContent","spacing","item","xs","md","Typography","List","dense","ListItem","ListItemText","primary","component","CardActions","ButtonGroup","onDoubleClick","timeslotId","unSubscribe","subscribeTimeslot","deleteTimeslot","TimeslotList","userInformation","timeslotStatus","timeslotsData","getTimeslots","sortOptions","name","setSortOption","groupBy","reduce","rv","x","groupedTimeslots","option","Object","keys","categorie","Navbar","loginInformation","to","loggedIn","moderatorLink","timeslotLink","App","getItem","verifyToken","pending","process","path","render","defaultState","loginReducer","action","error","errorMessage","roleReducer","userReducer","moderatorReducer","newState","timeslotReducer","newTimeslots","newTimeslotsDeleted","timeslotCategorieReducer","store","createStore","combineReducers","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5ceb6f4c.chunk.js","sourcesContent":["import Axios from \"axios\"\r\nimport { config } from \"../utils/config\"\r\n\r\nconst baseUrl = `${config().url}/api/user/login`\r\n\r\nexport const login = (email, password) => {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await Axios.post(baseUrl, { email: email, password: password })\r\n            const userData = user.data\r\n            localStorage.setItem(\"token\", userData.token)\r\n            dispatch({\r\n                type: \"LOGIN\",\r\n                data: {\r\n                    email: userData.email,\r\n                    token: userData.token\r\n                }\r\n            })\r\n        } catch (error) {\r\n            switch (error.response.status) {\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"LOGIN_ERROR\",\r\n                        data: {\r\n                            errorCode: error.response.data.errorCode\r\n                        }\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const verifyToken = (token) => {\r\n\r\n    return async dispatch => {\r\n        try {\r\n            await Axios.post(`${baseUrl}/verify`,\r\n                {},\r\n                {\r\n                    headers: {\r\n                        \"authorization\": `bearer ${token}`\r\n                    }\r\n                }\r\n            )\r\n\r\n            dispatch({\r\n                type: \"LOGIN\",\r\n                data: {\r\n                    token: token\r\n                }\r\n            })\r\n        } catch (error) {\r\n            switch (error.response.status) {\r\n                case 401:\r\n                    localStorage.clear()\r\n                    dispatch({\r\n                        type: \"NO_TOKEN\"\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    localStorage.clear()\r\n    return {\r\n        type: \"LOGOUT\"\r\n    }\r\n}\r\n\r\nexport const noTokenStorage = () => {\r\n    console.log(\"no storage\")\r\n    return {\r\n        type: \"NO_TOKEN\"\r\n    }\r\n}","export const config = () => {\r\n    if(process.env.NODE_ENV === \"development\") {\r\n        return {\r\n            url : \"http://localhost:3001\"\r\n        }\r\n    }\r\n    return {\r\n        url: \"\"\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {Alert} from '@material-ui/lab';\r\n\r\nexport const errorCodeFormatting = (errorCode, errorText, errorInfo = \"\") => {\r\n    if(!errorCode || errorCode === \"\") {\r\n        return;\r\n    }\r\n    return <Alert severity=\"error\">{errorText(errorCode, errorInfo)}</Alert>\r\n}","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { login } from \"../actions/login\"\r\nimport { useHistory } from 'react-router';\r\nimport { errorCodeFormatting } from '../utils/errorCodeFormatting';\r\n\r\nfunction LoginForm() {\r\n    const dispatch = useDispatch()\r\n\r\n    const errorCode = useSelector(state => state.login.errorCode)\r\n\r\n    const history = useHistory()\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const handleEmailChange = (event) => {\r\n        setEmail(event.target.value)\r\n    }\r\n\r\n    const handlePasswordChange = (event) => {\r\n        setPassword(event.target.value)\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        dispatch(login(email, password))\r\n        history.push(\"/\")\r\n        setPassword(\"\")\r\n        setEmail(\"\")\r\n    }\r\n\r\n\r\n    const errorText = (errorCode) => {\r\n        switch (errorCode) {\r\n            case \"INVALID_EMAIL_OR_PASS\":\r\n                return \"The email or password appear to be incorrect.\"\r\n            default:\r\n                return \"\"\r\n        }\r\n    }\r\n\r\n \r\n    return (\r\n        <div>\r\n            {errorCodeFormatting(errorCode, errorText)}\r\n            < form onSubmit={handleSubmit} >\r\n            email: <input type=\"email\" value={email} onChange={handleEmailChange} /> <br />\r\n      password: <input type=\"password\" value={password} onChange={handlePasswordChange} /><br />\r\n            <input type=\"submit\" />\r\n        </form >\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm","import Axios from \"axios\"\r\nimport {config} from \"../utils/config\"\r\n\r\nconst baseUrl = `${config().url}/api/user`\r\n\r\nexport const getUserInformation = (token) => {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await Axios.get(baseUrl, {\r\n                headers: {\r\n                    \"authorization\": `bearer ${token}`\r\n                }\r\n            })\r\n\r\n            const userData = user.data\r\n            \r\n            dispatch({\r\n                type: \"USER_INFORMATION\",\r\n                data: {\r\n                    user: userData\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error.response.status)\r\n            switch(error.response.status) {\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"INVALID_TOKEN\"\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n                }\r\n        }\r\n    }\r\n}","import React, {useEffect} from 'react';\r\nimport {useSelector, useDispatch } from 'react-redux'\r\nimport { getUserInformation } from \"../actions/user\"\r\n\r\nfunction UserInformation() {\r\n    const userinformation = useSelector(state => state.user.user)\r\n    const userRoles = useSelector(state => state.user.roles)\r\n    const token = useSelector(state => state.login.token)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getUserInformation(token))\r\n    }, [dispatch, token])\r\n\r\n    const mapRoles = (roles) => {\r\n\r\n        const roleListElements = roles.map((role) => \r\n            <li key={role.id} >{role.abreviation} ({role.description})</li>\r\n        )\r\n    \r\n        return <ul>{roleListElements}</ul>\r\n    }\r\n    \r\n    //renders only if there is userinformation\r\n    if(userinformation) {\r\n        return (\r\n            <div>\r\n                Email: {userinformation.email} \r\n                <hr />\r\n                Hallo {userinformation.frontName} {userinformation.lastName},\r\n                <br/>\r\n                \r\n                je rollen zijn\r\n                {userRoles ? mapRoles(userRoles) : \" loading\"}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    //default return\r\n    return (\r\n        <div>Loading....</div>\r\n    )\r\n}\r\n\r\nexport default UserInformation","import Axios from \"axios\"\r\n\r\n\r\nimport {config} from \"../utils/config\"\r\n\r\nconst baseUrl = `${config().url}/api/moderator`\r\n\r\nexport const getUsers = (token) => {\r\n    return async dispatch => {\r\n        try {\r\n            const users = await Axios.get(`${baseUrl}/users`, {\r\n                headers: {\r\n                    \"authorization\": `bearer ${token}`\r\n                }\r\n            })\r\n\r\n            const userList = users.data\r\n            dispatch({\r\n                type: \"USERS_LIST\",\r\n                data: {\r\n                    userList: userList\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error.response.status)\r\n            switch (error.response.status) {\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"INVALID_TOKEN\"\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const addUser = (token, email, frontName, lastName) => {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await Axios.post(`${baseUrl}/addUser`,\r\n                {\r\n                    email: email,\r\n                    frontName: frontName,\r\n                    lastName: lastName\r\n                },\r\n                {\r\n                    headers: {\r\n                        \"authorization\": `bearer ${token}`\r\n                    }\r\n                }\r\n            )\r\n            const userEntity = user.data\r\n\r\n            //refresh user list\r\n            dispatch({\r\n                type: \"ADD_USER\",\r\n                data: {\r\n                    user: userEntity\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error.response.data)\r\n            switch (error.response.status) {\r\n                case 400: \r\n                    dispatch({\r\n                        type: \"VALIDATION_ERROR_ADD_USER\",\r\n                        data: error.response.data\r\n                    })\r\n                    break\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"INVALID_TOKEN\"\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteUser = (token, userId) => {\r\n    return async dispatch => {\r\n        try {\r\n            await Axios.post(`${baseUrl}/deleteUser`,\r\n                {\r\n                    userId: userId\r\n                },\r\n                {\r\n                    headers: {\r\n                        \"authorization\": `bearer ${token}`\r\n                    }\r\n                }\r\n            )\r\n            //refresh user list\r\n            dispatch({\r\n                type: \"DELETE_USER_SUCCES\",\r\n            })\r\n        } catch (error) {\r\n            console.log(error.response.data)\r\n            switch (error.response.status) {\r\n                case 400: \r\n                    dispatch({\r\n                        type: \"VALIDATION_ERROR_ADD_USER\",\r\n                        data: error.response.data\r\n                    })\r\n                    break\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"INVALID_TOKEN\"\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const addRole = (token, abreviation, description) => {\r\n    return async dispatch => {\r\n        try {\r\n            const role = await Axios.post(`${baseUrl}/addRole`,\r\n                {\r\n                    abreviation: abreviation,\r\n                    description: description\r\n                },\r\n                {\r\n                    headers: {\r\n                        \"authorization\": `bearer ${token}`\r\n                    }\r\n                }\r\n            )\r\n            const roleEntity = role.data\r\n            console.log(\"addRole\", roleEntity)\r\n            //add role to role list\r\n            dispatch({\r\n                type: \"ADD_ROLE\",\r\n                data: {\r\n                    role : roleEntity\r\n                }    \r\n            })\r\n        } catch (error) {\r\n            switch (error.response.status) {\r\n                case 400: \r\n                    dispatch({\r\n                        type: \"VALIDATION_ERROR_ADD_ROLE\",\r\n                        data: error.response.data\r\n                    })\r\n                    break\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"INVALID_TOKEN\"\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const toggleRole = (token, roleId, userId) => {\r\n    return async dispatch => {\r\n        console.log('lamo')\r\n        try {\r\n            const toggleRoleRespone = await Axios.post(`${baseUrl}/toggleRole`,\r\n                {\r\n                    roleId: roleId,\r\n                    userId: userId\r\n                },\r\n                {\r\n                    headers: {\r\n                        \"authorization\": `bearer ${token}`\r\n                    }\r\n                }\r\n            )\r\n            const roleEntity = toggleRoleRespone.data.role\r\n            const userEntity = toggleRoleRespone.data.user\r\n            console.log(\"addRole\", toggleRoleRespone.data)\r\n            //add role to role list\r\n            dispatch({\r\n                type: \"TOGGLE_ROLE\",\r\n                data: {\r\n                    user : userEntity,\r\n                    role: roleEntity\r\n                }    \r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n            if(!error.response){\r\n                dispatch({\r\n                    type: \"WEIRD_ERROR\"\r\n                })\r\n                return;\r\n            }\r\n\r\n            switch (error.response.status) {\r\n                case 400: \r\n                    dispatch({\r\n                        type: \"VALIDATION_ERROR_ADD_ROLE\",\r\n                        data: error.response.data\r\n                    })\r\n                    break\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"INVALID_TOKEN\"\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const toggleChairman = (token, roleId, userId) => {\r\n    return async dispatch => {\r\n        try {\r\n            const toggleChairmanResponse = await Axios.post(`${baseUrl}/toggleChairman`,\r\n                {\r\n                    roleId: roleId,\r\n                    userId: userId\r\n                },\r\n                {\r\n                    headers: {\r\n                        \"authorization\": `bearer ${token}`\r\n                    }\r\n                }\r\n            )\r\n            const userEntity = toggleChairmanResponse.data\r\n            //add role to role list\r\n            dispatch({\r\n                type: \"TOGGLE_CHAIRMAN\",\r\n                data: {\r\n                    user : userEntity\r\n                }    \r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n            if(!error.response){\r\n                dispatch({\r\n                    type: \"WEIRD_ERROR\"\r\n                })\r\n                return;\r\n            }\r\n\r\n            switch (error.response.status) {\r\n                case 400: \r\n                    dispatch({\r\n                        type: \"TOGGLE_CHAIRMAN_ERROR\",\r\n                        data: {\r\n                            erroCode: error.response.data.errorCode\r\n                        }\r\n                    })\r\n                    break\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"INVALID_TOKEN\"\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}","import Axios from \"axios\"\r\n\r\nimport {config} from \"../utils/config\"\r\n\r\nconst baseUrl = `${config().url}/api/role`\r\n\r\n\r\nexport const getRoleList = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const roles = await Axios.get(`${baseUrl}`)\r\n\r\n            const rolesList = roles.data\r\n            dispatch({\r\n                type: \"ROLE_LIST\",\r\n                data: {\r\n                    roles: rolesList\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error.response.status)\r\n            switch (error.response.status) {\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"INVALID_TOKEN\"\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getUsers, deleteUser, toggleRole, toggleChairman } from \"../actions/moderator\"\r\nimport { getRoleList } from \"../actions/role\"\r\nimport \"../css/dropdown.css\"\r\nimport { TableContainer, Table, TableHead, TableRow, TableCell, TableBody } from '@material-ui/core';\r\n\r\n\r\nfunction UserList() {\r\n    const dispatch = useDispatch()\r\n\r\n    const users = useSelector(state => state.moderator)\r\n    const token = useSelector(state => state.login.token)\r\n    const roles = useSelector(state => state.roles)\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            dispatch(getUsers(token))\r\n            dispatch(getRoleList())\r\n        }\r\n    }, [dispatch, token])\r\n\r\n\r\n    \r\n\r\n    const findRoleById = (rolesArray, roleId) => {\r\n        return rolesArray.filter(role => role.id === roleId)[0]\r\n    }\r\n\r\n    function mapUsers() {\r\n        return (\r\n            <TableContainer>\r\n                <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>front name</TableCell>\r\n                        <TableCell>Last name</TableCell>\r\n                        <TableCell>Email</TableCell>\r\n                        <TableCell>ID</TableCell>\r\n                        <TableCell>roles</TableCell>\r\n                        <TableCell>delete user</TableCell>\r\n                        <TableCell>change the user roles</TableCell>\r\n                        <TableCell>is voorzitter van</TableCell>\r\n                        <TableCell></TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {\r\n                        users.map(user => \r\n                            <TableRow key={user.id}>\r\n                                <TableCell>{user.frontName}</TableCell>\r\n                                <TableCell>{user.lastName}</TableCell>\r\n                                <TableCell>{user.email}</TableCell>\r\n                                <TableCell>{user.id}</TableCell>\r\n                                <TableCell>{user.roles.map(role => <div key={role}>{findRoleById(roles, role).abreviation}</div>)}</TableCell>\r\n                                <TableCell><button onClick={() => dispatch(deleteUser(token, user.id))}>Delete User</button></TableCell>\r\n                                <TableCell>\r\n                                    <div className=\"dropdown\">\r\n                                        <button className=\"dropbtn\">Dropdown</button>\r\n                                        <div className=\"dropdown-content\">\r\n                                            {roles.map(role => <button key={role.id} onClick={() => dispatch(toggleRole(token, role.id, user.id))}>{role.abreviation}</button>)}\r\n                                        </div>\r\n                                    </div>\r\n                                </TableCell>\r\n                                <TableCell>{user.chairman.map(role => <div key={role}>{findRoleById(roles, role).abreviation}</div>)}</TableCell>\r\n                                <TableCell>\r\n                                    <div className=\"dropdown\">\r\n                                        <button className=\"dropbtn\">Dropdown</button>\r\n                                        <div className=\"dropdown-content\">\r\n                                            {roles.map(role => <button key={role.id} onClick={() => dispatch(toggleChairman(token, role.id, user.id))}>{role.abreviation}</button>)}\r\n                                        </div>\r\n                                    </div>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )\r\n                    }\r\n                </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n    }\r\n\r\n    if (users && roles) {\r\n        return (\r\n            <div>\r\n                {mapUsers()}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return <div></div>\r\n}\r\n\r\nexport default UserList","import Axios from \"axios\"\r\n\r\nimport { config } from \"../utils/config\"\r\n\r\nconst baseUrl = `${config().url}/api/timeslotCategorie`\r\n\r\n\r\nexport const addTimeslotCategorie = (token, title, cancelLength, subscribeLength) => {\r\n    return async dispatch => {\r\n        try {\r\n            const timeslotCategorie = await Axios.post(`${baseUrl}`,\r\n                {\r\n                    title: title,\r\n                    cancelLength: cancelLength,\r\n                    subscribeLength: subscribeLength\r\n                },\r\n                {\r\n                    headers: {\r\n                        \"authorization\": `bearer ${token}`\r\n                    }\r\n                }\r\n            )\r\n            const categorieEntity = timeslotCategorie.data\r\n\r\n            //refresh user list\r\n            dispatch({\r\n                type: \"ADD_TIMESLOT_CATEGORIE\",\r\n                data: {\r\n                    timeslotCategorie: categorieEntity\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error.response.data)\r\n            switch (error.response.status) {\r\n                case 400:\r\n                    dispatch({\r\n                        type: \"TIMESLOT_CATEGORIE_ERROR\",\r\n                        data: {\r\n                            errorCode: error.response.data.errorCode\r\n                        }\r\n                    })\r\n                    break\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"TIMESLOT_CATEGORIE_VALIDATION_ERROR\"\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const getTimeslotCategorieList = (token) => {\r\n    return async dispatch => {\r\n        try {\r\n            const timeslotCategorie = await Axios.get(`${baseUrl}`,\r\n                {\r\n                    headers: {\r\n                        \"authorization\": `bearer ${token}`\r\n                    }\r\n                }\r\n            )\r\n            const categoriesEtity = timeslotCategorie.data\r\n\r\n            //refresh user list\r\n            dispatch({\r\n                type: \"TIMESLOT_CATEGORIE_LIST\",\r\n                data: {\r\n                    timeslotCategories: categoriesEtity\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error.response.data)\r\n            switch (error.response.status) {\r\n                case 400:\r\n                    dispatch({\r\n                        type: \"TIMESLOT_CATEGORIE_ERROR\",\r\n                        data: {\r\n                            errorCode: error.response.data.errorCode\r\n\r\n                        }\r\n                    })\r\n                    break\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"TIMESLOT_CATEGORIE_VALIDATION_ERROR\"\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { errorCodeFormatting } from '../utils/errorCodeFormatting';\r\nimport { addTimeslotCategorie } from \"../actions/timeslotCategorie\"\r\n\r\nfunction TimeslotCategorieForm() {\r\n    const dispatch = useDispatch()\r\n\r\n    const timeslotCategorieState = useSelector(state => state.timeslotCategorie)\r\n    const token = useSelector(state => state.login.token)\r\n\r\n    const [title, setTitle] = useState(\"\")\r\n    const [cancelLength, setCancelLength] = useState(24)\r\n    const [subscribeLength, setSubscribeLength] = useState(0)\r\n\r\n    const handleTitleChange = (event) => {\r\n        setTitle(event.target.value)\r\n    }\r\n\r\n    const handleCancelLengthChange = (event) => {\r\n        if (event.target.value !== \"\") {\r\n            setCancelLength(Number(event.target.value))\r\n        } else {\r\n            setCancelLength(\"\")\r\n        }\r\n    }\r\n\r\n    const handleSubscribeLengthChange = (event) => {\r\n        if (event.target.value !== \"\") {\r\n            setSubscribeLength(Number(event.target.value))\r\n        } else {\r\n            setSubscribeLength(\"\")\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        console.log(title, cancelLength, subscribeLength)\r\n        dispatch(addTimeslotCategorie(token, title, cancelLength, subscribeLength))\r\n        setTitle(\"\")\r\n        setCancelLength(24)\r\n    }\r\n\r\n\r\n    const errorText = (errorCode) => {\r\n        switch (errorCode) {\r\n            case \"TITLE_LENGTH_ERROR\":\r\n                return \"The title appears to be of incorrect length\"\r\n            default:\r\n                return \"\"\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>Add timelslotCategorie</h2>\r\n            {errorCodeFormatting(timeslotCategorieState.errorCode, errorText)}\r\n            < form onSubmit={handleSubmit} >\r\n                title: <input type=\"text\" value={title} onChange={handleTitleChange} /> <br />\r\n                cancle length (hours): <input type=\"number\" min={0} value={cancelLength} onChange={handleCancelLengthChange} /><br />\r\n                subscribe length(hours): <input type=\"number\" min={0} value={subscribeLength} onChange={handleSubscribeLengthChange} /><br />\r\n                <input type=\"submit\" />\r\n            </form >\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TimeslotCategorieForm","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addUser } from \"../actions/moderator\"\r\n\r\n\r\nfunction AddUser() {\r\n    const dispatch = useDispatch()\r\n\r\n    const token = useSelector(state => state.login.token)\r\n\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [frontName, setFrontName] = useState(\"\")\r\n    const [lastName, setLastName] = useState(\"\")\r\n    const handleEmailChange = (event) => {\r\n        setEmail(event.target.value)\r\n    }\r\n\r\n    const handleFrontNameChange = (event) => {\r\n        setFrontName(event.target.value)\r\n    }\r\n\r\n    const handleLastNameChange = (event) => {\r\n        setLastName(event.target.value)\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        dispatch(addUser(token, email, frontName, lastName))\r\n        setFrontName(\"\")\r\n        setLastName(\"\")\r\n        setEmail(\"\")\r\n    }\r\n    return (\r\n        <div>\r\n            <h2>Add user</h2>\r\n            < form onSubmit={handleSubmit} >\r\n                email: <input type=\"email\" value={email} onChange={handleEmailChange} /> <br />\r\n                front name: <input type=\"text\" value={frontName} onChange={handleFrontNameChange} /><br />\r\n                last name  <input type=\"text\" value={lastName} onChange={handleLastNameChange} /><br />\r\n                <input type=\"submit\" />\r\n            </form >\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddUser","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getRoleList } from \"../actions/role\"\r\nimport \"../css/dropdown.css\"\r\nimport { TableContainer, Table, TableHead, TableRow, TableCell, TableBody } from '@material-ui/core';\r\n\r\nfunction RoleList() {\r\n    const dispatch = useDispatch()\r\n\r\n    const token = useSelector(state => state.login.token)\r\n    const roles = useSelector(state => state.roles)\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            dispatch(getRoleList())\r\n        }\r\n    }, [dispatch, token])\r\n\r\n    function mapRoles(roles) {\r\n        return (\r\n            <TableContainer>\r\n                <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>ID</TableCell>\r\n                        <TableCell>abreviation</TableCell>\r\n                        <TableCell>description</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {\r\n                        roles.map(role => \r\n                            <TableRow key={role.id}>\r\n                                <TableCell>{role.id}</TableCell>\r\n                                <TableCell>{role.abreviation}</TableCell>\r\n                                <TableCell>{role.description}</TableCell>\r\n                            </TableRow>\r\n                        )\r\n                    }\r\n                </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n    }\r\n    console.log(roles)\r\n    if (roles) {\r\n        return (\r\n            <div>\r\n                {mapRoles(roles)}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return <div></div>\r\n}\r\n\r\nexport default RoleList","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addRole } from \"../actions/moderator\"\r\n\r\nimport { Button } from '@material-ui/core';\r\n\r\n\r\nfunction AddUser() {\r\n    const dispatch = useDispatch()\r\n\r\n    const token = useSelector(state => state.login.token)\r\n\r\n\r\n    const [abreviation, setAbreviation] = useState(\"\")\r\n    const [description, setDescription] = useState(\"\")\r\n    const handleAbreviationChange = (event) => {\r\n        setAbreviation(event.target.value)\r\n    }\r\n\r\n    const handleDescriptionChange = (event) => {\r\n        setDescription(event.target.value)\r\n    }\r\n\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        dispatch(addRole(token, abreviation, description))\r\n        setAbreviation(\"\")\r\n        setDescription(\"\")\r\n    }\r\n    return (\r\n        <div>\r\n            <h2>Add a role</h2>\r\n            < form onSubmit={handleSubmit} >\r\n                abreviation: <input type=\"text\" value={abreviation} onChange={handleAbreviationChange} /> <br />\r\n                description: <input type=\"text\" value={description} onChange={handleDescriptionChange} /><br />\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">Submit</Button>\r\n            </form >\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddUser","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport \"../css/dropdown.css\"\r\nimport { TableContainer, Table, TableHead, TableRow, TableCell, TableBody } from '@material-ui/core';\r\nimport { getTimeslotCategorieList } from '../actions/timeslotCategorie';\r\n\r\nfunction TimeslotCategorieList() {\r\n    const dispatch = useDispatch()\r\n\r\n    const token = useSelector(state => state.login.token)\r\n    const timeslotCategories = useSelector(state => state.timeslotCategorie.timeslotCategories)\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            dispatch(getTimeslotCategorieList())\r\n        }\r\n    }, [dispatch, token])\r\n\r\n    function mapTimeslotCategories(timeslotCategories) {\r\n        return (\r\n            <TableContainer>\r\n                <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>ID</TableCell>\r\n                        <TableCell>title</TableCell>\r\n                        <TableCell>cancel length (hours)</TableCell>\r\n                        <TableCell>subscribe Length (hours)</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {\r\n                        timeslotCategories.map(timeslot => \r\n                            <TableRow key={timeslot.id}>\r\n                                <TableCell>{timeslot.id}</TableCell>\r\n                                <TableCell>{timeslot.title}</TableCell>\r\n                                <TableCell>{timeslot.cancelLength}</TableCell>\r\n                                <TableCell>{timeslot.subscribeLength}</TableCell>\r\n                            </TableRow>\r\n                        )\r\n                    }\r\n                </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n    }\r\n    if (timeslotCategories) {\r\n        return (\r\n            <div>\r\n                {mapTimeslotCategories(timeslotCategories)}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return <div></div>\r\n}\r\n\r\nexport default TimeslotCategorieList","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getUserInformation } from \"../actions/user\"\r\n\r\nimport UserInformation from \"./UserInformation\"\r\nimport UserList from \"./UserList\"\r\nimport TimeslotCategorieForm from './TimeslotCatogorieForm';\r\n\r\nimport AddUser from \"./AddUser\"\r\n\r\nimport RoleList from \"./RoleList\"\r\nimport AddRole from \"./AddRole\"\r\nimport TimeslotCategorieList from './TimeslotCategorieList';\r\nimport { ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\n\r\nfunction Moderator() {\r\n    const dispatch = useDispatch()\r\n    const token = useSelector(state => state.login.token)\r\n\r\n    useEffect(() => {\r\n        dispatch(getUserInformation(token))\r\n    }, [dispatch, token])\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <UserInformation />\r\n\r\n            <ExpansionPanel>\r\n                <ExpansionPanelSummary\r\n                    id=\"user_panel\"\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                >\r\n                    Users\r\n                </ExpansionPanelSummary>\r\n\r\n                <ExpansionPanelDetails>\r\n                    <div>\r\n                        <UserList />\r\n                        <AddUser />\r\n                    </div>\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n\r\n            <ExpansionPanel>\r\n                <ExpansionPanelSummary\r\n                    id=\"user_panel\"\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                >\r\n                    Roles\r\n                </ExpansionPanelSummary>\r\n\r\n                <ExpansionPanelDetails>\r\n                    <div>\r\n                        <RoleList />\r\n                        <AddRole />\r\n                    </div>\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n\r\n\r\n            <ExpansionPanel>\r\n                <ExpansionPanelSummary\r\n                    id=\"user_panel\"\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                >\r\n                    Timeslot categories\r\n                </ExpansionPanelSummary>\r\n\r\n                <ExpansionPanelDetails>\r\n                    <div>\r\n                        <TimeslotCategorieList />\r\n                        <TimeslotCategorieForm />\r\n                    </div>\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Moderator","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux'\r\nimport { logout } from \"../actions/login\"\r\nimport { useHistory } from 'react-router';\r\n\r\nfunction Logout() {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        dispatch(logout())\r\n        history.push(\"/\")\r\n    }, [dispatch, history])\r\n\r\n    return (\r\n        <div>logout</div>\r\n    )\r\n}\r\n\r\nexport default Logout","import Axios from \"axios\"\r\nimport {config} from \"../utils/config\"\r\n\r\nconst baseUrl = `${config().url}/api/timeslot`\r\n\r\nexport const addTimeslot = (token, description, startTime, endTime, maxPeople, roles, timeslotCategorie) => {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await Axios.post(`${baseUrl}`,\r\n                {\r\n                    description: description,\r\n                    startTime: startTime,\r\n                    endTime: endTime,\r\n                    maxPeople: maxPeople,\r\n                    roles: roles,\r\n                    timeslotCategorie: timeslotCategorie\r\n                },\r\n                {\r\n                    headers: {\r\n                        \"authorization\": `bearer ${token}`\r\n                    }\r\n                }\r\n            )\r\n            const timeslotData = user.data\r\n\r\n            setTimeout(() => {\r\n                dispatch({\r\n                    type: \"RESET_SUCCES_TIMESLOT\"\r\n                })\r\n            }, 5000)\r\n\r\n            //refresh user list\r\n            dispatch({\r\n                type: \"ADD_TIMESLOT\",\r\n                data: {\r\n                    timeslot: timeslotData\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error.response)\r\n            \r\n            switch (error.response.status) {\r\n                case 400: \r\n                    dispatch({\r\n                        type: \"TIMESLOT_ERROR\",\r\n                        data: {\r\n                            errorCode: error.response.data.errorCode,\r\n                            errorInfo: error.response.data.errorInfo\r\n                        } \r\n                    })\r\n                    break\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"TIMESLOT_ERROR\",\r\n                        data: {\r\n                            errorCode: error.response.data.errorCode\r\n                        }\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const getTimeslots = (token) => {\r\n    return async dispatch => {\r\n        try {\r\n            const timeslots = await Axios.get(`${baseUrl}`,\r\n                {\r\n                    headers: {\r\n                        \"authorization\": `bearer ${token}`\r\n                    }\r\n                }\r\n            )\r\n            const timeslotsData = timeslots.data\r\n\r\n            //refresh user list\r\n            dispatch({\r\n                type: \"TIMESLOT_LIST\",\r\n                data: {\r\n                    timeslots: timeslotsData\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error.response.data)\r\n            switch (error.response.status) {\r\n                case 400: \r\n                    dispatch({\r\n                        type: \"VALIDATION_ERROR_TIMESLOT\",\r\n                        data: error.response.data\r\n                    })\r\n                    break\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"INVALID_TOKEN\"\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const subscribeTimeslot = (token, timeslotId) => {\r\n    return async dispatch => {\r\n        try {\r\n            const timeslot = await Axios.post(`${baseUrl}/subscribe`,\r\n                {\r\n                    timeslotId: timeslotId\r\n                },\r\n                {\r\n                    headers: {\r\n                        \"authorization\": `bearer ${token}`\r\n                    }\r\n                }\r\n            )\r\n            const timeslotData = timeslot.data\r\n\r\n            //refresh user list\r\n            dispatch({\r\n                type: \"SUBSCRIBED_TIMESLOT\",\r\n                data: {\r\n                    timeslot: timeslotData\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error.response.data)\r\n            switch (error.response.status) {\r\n                case 400: \r\n                    dispatch({\r\n                        type: \"TIMESLOT_ERROR\",\r\n                        data: error.response.data\r\n                    })\r\n                    break\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"INVALID_TOKEN\"\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const unSubscribe = (token, timeslotId) => {\r\n    return async dispatch => {\r\n        try {\r\n            const timeslot = await Axios.post(`${baseUrl}/unsubscribe`,\r\n                {\r\n                    timeslotId: timeslotId\r\n                },\r\n                {\r\n                    headers: {\r\n                        \"authorization\": `bearer ${token}`\r\n                    }\r\n                }\r\n            )\r\n            const timeslotData = timeslot.data\r\n\r\n            //unsubscribe redux is same as subscribe redux maybe change name in future?\r\n            dispatch({\r\n                type: \"SUBSCRIBED_TIMESLOT\",\r\n                data: {\r\n                    timeslot: timeslotData\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n            switch (error.response.status) {\r\n                case 400: \r\n                    dispatch({\r\n                        type: \"TIMESLOT_ERROR\",\r\n                        data: error.response.data\r\n                    })\r\n                    break\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"INVALID_TOKEN\"\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteTimeslot = (token, timeslotId) => {\r\n    return async dispatch => {\r\n        try {\r\n            await Axios.post(`${baseUrl}/delete`,\r\n                {\r\n                    timeslotId: timeslotId\r\n                },\r\n                {\r\n                    headers: {\r\n                        \"authorization\": `bearer ${token}`\r\n                    }\r\n                }\r\n            )\r\n\r\n            //unsubscribe redux is same as subscribe redux maybe change name in future?\r\n            dispatch({\r\n                type: \"DELETE_TIMESLOT\",\r\n                data: {\r\n                    timeslotId: timeslotId \r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n            switch (error.response.status) {\r\n                case 400: \r\n                    dispatch({\r\n                        type: \"TIMESLOT_ERROR\",\r\n                        data: error.response.data\r\n                    })\r\n                    break\r\n                case 401:\r\n                    dispatch({\r\n                        type: \"INVALID_TOKEN\"\r\n                    })\r\n                    break\r\n                default:\r\n                    dispatch({\r\n                        type: \"SERVER_ERROR\"\r\n                    })\r\n                    break\r\n            }\r\n        }\r\n    }\r\n}","function pad(number) {\r\n    if (number < 10) {\r\n      return '0' + number;\r\n    }\r\n    return number;\r\n}\r\n\r\nexport const formatDateForCard = (startDate, endDate) => {\r\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n    \r\n    if (toDateString(startDate) === toDateString(endDate)) {\r\n        return `${pad(startDate.getHours())}:${pad(startDate.getMinutes())}-${pad(endDate.getHours())}:${pad(endDate.getMinutes())} ${months[startDate.getMonth()]}, ${startDate.getDate()} ${startDate.getFullYear()}`\r\n    }\r\n\r\n    if(startDate.getFullYear() === endDate.getFullYear()) {\r\n        return `${months[startDate.getMonth()]}, ${startDate.getDate()} ${pad(startDate.getHours())}:${pad(startDate.getMinutes())}-${months[endDate.getMonth()]}, ${endDate.getDate()} ${pad(endDate.getHours())}:${pad(endDate.getMinutes())}`\r\n    }\r\n    return `${months[startDate.getMonth()]}, ${startDate.getDate()} ${startDate.getFullYear()}, ${pad(startDate.getHours())}:${pad(startDate.getMinutes())}-${months[endDate.getMonth()]}, ${endDate.getDate()} ${endDate.getFullYear()}, ${pad(endDate.getHours())}:${pad(endDate.getMinutes())}`\r\n}\r\n\r\nexport const toDateString = (date) => {\r\n    return `${date.getFullYear()}-${pad(date.getMonth() + 1)}-${pad(date.getDate())}`\r\n}\r\n\r\nexport const toTimeString = (date) => {\r\n    return `${pad(date.getHours())}:${pad(date.getMinutes())}`\r\n}","export const checkRole = (userRoles, checkRole) => {\r\n    for (const user in userRoles){\r\n        if(userRoles[user].abreviation === checkRole) {\r\n            return true\r\n        }\r\n    }\r\n    return false\r\n}\r\n\r\nexport const checkTimeslotCategorie = (categorieList, categorieId) => {\r\n\r\n\r\n    for (const index in categorieList) {\r\n        if(categorieList[index].id === categorieId) {\r\n            return categorieList[index]\r\n        }\r\n    }\r\n    return null\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addTimeslot } from \"../actions/timeslot\"\r\n\r\nimport { toDateString, toTimeString } from \"../utils/timeFormat\"\r\nimport { errorCodeFormatting } from \"../utils/errorCodeFormatting\"\r\n\r\nimport { getRoleList } from '../actions/role';\r\n\r\nimport { Alert } from \"@material-ui/lab\"\r\nimport { getTimeslotCategorieList } from '../actions/timeslotCategorie';\r\nimport { getUserInformation } from '../actions/user';\r\nimport { checkRole } from '../utils/checkRole';\r\n\r\nfunction TimeslotForm() {\r\n    const token = useSelector(state => state.login.token)\r\n    const roles = useSelector(state => state.roles)\r\n    const userRoles = useSelector(state => state.user.roles)\r\n    const user = useSelector(state => state.user.user)\r\n\r\n    const timeslotCategories = useSelector(state => state.timeslotCategorie.timeslotCategories)\r\n    const errorCode = useSelector(state => state.timeslot.errorCode)\r\n    const successTimeslot = useSelector(state => state.timeslot.succes)\r\n\r\n\r\n    const [description, setDescription] = useState(\"\")\r\n    const [startTime, setStarttime] = useState(new Date())\r\n    const [endTime, setEndTime] = useState(new Date())\r\n    const [maxPeople, setMaxPeople] = useState(1)\r\n    const [roleSelection, setRoleSelection] = useState([])\r\n    const [categorieSelection, setCategorieSelection] = useState(\"\")\r\n\r\n\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getRoleList())\r\n        dispatch(getTimeslotCategorieList(token))\r\n        dispatch(getUserInformation(token))\r\n    }, [dispatch, token])\r\n\r\n    const handleDescriptionChange = (event) => {\r\n        setDescription(event.target.value)\r\n    }\r\n\r\n    const handleStartTimeDateChange = (event) => {\r\n        const dateSplitted = event.target.value.split(\"-\")\r\n        let tempDate = new Date(startTime.getTime())\r\n\r\n        if (event.target.value !== \"\") {\r\n            tempDate.setFullYear(dateSplitted[0])\r\n            tempDate.setMonth(dateSplitted[1] - 1)\r\n            tempDate.setDate(dateSplitted[2])\r\n\r\n            // if the new date start time is later than the end time change the end time to the start time\r\n            if (tempDate >= new Date(endTime.getTime())) {\r\n                setEndTime(tempDate)\r\n            }\r\n            setStarttime(tempDate)\r\n        }\r\n    }\r\n\r\n    const handleStartTimeTimeChange = (event) => {\r\n        let timeSplitted = event.target.value.split(\":\")\r\n        let tempDate = new Date(startTime.getTime())\r\n\r\n        if (event.target.value !== \"\") {\r\n\r\n            tempDate.setHours(timeSplitted[0])\r\n            tempDate.setMinutes(timeSplitted[1])\r\n            tempDate.setSeconds(0)\r\n            // if the new date start time is later than the end time change the end time to the start time\r\n            if (tempDate >= new Date(endTime.getTime())) {\r\n                setEndTime(tempDate)\r\n            }\r\n            setStarttime(tempDate)\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const handleEndTimeDateChange = (event) => {\r\n        const dateSplitted = event.target.value.split(\"-\")\r\n        let tempDate = new Date(endTime.getTime())\r\n        if (event.target.value !== \"\") {\r\n            tempDate.setFullYear(dateSplitted[0])\r\n            tempDate.setMonth(dateSplitted[1] - 1)\r\n            tempDate.setDate(dateSplitted[2])\r\n\r\n            setEndTime(tempDate)\r\n        }\r\n    }\r\n\r\n    const handleEndTimeTimeChange = (event) => {\r\n\r\n        let timeSplitted = event.target.value.split(\":\")\r\n        let tempDate = new Date(endTime.getTime())\r\n\r\n        if (event.target.value !== \"\") {\r\n            tempDate.setHours(timeSplitted[0])\r\n            tempDate.setMinutes(timeSplitted[1])\r\n            tempDate.setSeconds(0)\r\n\r\n            setEndTime(tempDate)\r\n        }\r\n    }\r\n\r\n    const handleMaxPeople = (event) => {\r\n        setMaxPeople(event.target.value)\r\n    }\r\n\r\n    const handleRoleSelectionChange = (event) => {\r\n        const roleToSelect = event.target.value\r\n\r\n        if (roleSelection.includes(roleToSelect)) {\r\n            console.log(\"lmao\")\r\n            setRoleSelection(roleSelection.filter(role => role !== roleToSelect))\r\n        } else {\r\n            setRoleSelection(roleSelection.concat(event.target.value))\r\n        }\r\n    }\r\n\r\n    const handleCategorieSelectionChange = (event) => {\r\n        setCategorieSelection(event.target.value)\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        console.log(startTime)\r\n        //if the categorie is not changed set the first categorie in the list\r\n        if (categorieSelection === \"\" && !categorieSelection) {\r\n            dispatch(addTimeslot(token,\r\n                description, startTime, endTime,\r\n                maxPeople, roleSelection, timeslotCategories[0].id))\r\n        } else {\r\n            dispatch(addTimeslot(token, description, startTime, endTime, maxPeople, roleSelection, categorieSelection))\r\n        }\r\n        event.preventDefault()\r\n\r\n    }\r\n\r\n    const errorText = (errorCode) => {\r\n        switch (errorCode) {\r\n            case \"NOT_AUTHORIZED\":\r\n                return \"You are not not authorized to create timeslot\"\r\n            case \"NO_ROLES_ERROR\": \r\n                return \"You have not selected any roles for the timeslot please select one\"\r\n            case \"START_GREATER_END_TIME_ERROR\":\r\n                return \"The start time is earlier than the end time.\"\r\n            default:\r\n                return \"\"\r\n        }\r\n    }\r\n\r\n    const successFormatting = (success) => {\r\n        if (success) {\r\n            return <Alert severity=\"success\">This is a success alert — check it out!</Alert>\r\n        }\r\n        return;\r\n    }\r\n\r\n    const findRoleById = (rolesArray, roleId) => {\r\n        return rolesArray.filter(role => role.id === roleId)[0]\r\n    }\r\n\r\n    //do not delete\r\n    const startTimeDateString = toDateString(startTime)\r\n    const startTimeTimeString = toTimeString(startTime)\r\n\r\n    const endTimeDateString = toDateString(endTime)\r\n    const endTimeTimeString = toTimeString(endTime)\r\n\r\n    let chooseRoles = roles.map(role => role.id)\r\n    if(!checkRole(userRoles, \"createTimeslot\")){\r\n        if(user) {\r\n            chooseRoles = user.chairman\r\n        }else {\r\n            chooseRoles = []\r\n        }\r\n    }\r\n\r\n\r\n\r\n    if (roles.length !== 0 && timeslotCategories !== 0) {\r\n        return (\r\n            <div>\r\n                {errorCodeFormatting(errorCode, errorText)}\r\n                {successFormatting(successTimeslot)}\r\n                < form onSubmit={handleSubmit} >\r\n                    description: <input type=\"text\" value={description} onChange={handleDescriptionChange} /> <br />\r\n                    startTime date: <input type=\"date\" value={startTimeDateString} onChange={handleStartTimeDateChange} />\r\n                    startTime time: <input type=\"time\" value={startTimeTimeString} onChange={handleStartTimeTimeChange} />\r\n                    <br />\r\n                    endTime date: <input type=\"date\" value={endTimeDateString} onChange={handleEndTimeDateChange} />\r\n                    endTime time: <input type=\"time\" value={endTimeTimeString} onChange={handleEndTimeTimeChange} />\r\n\r\n                    <br />\r\n                     maxPeople: <input type=\"number\" value={maxPeople} onChange={handleMaxPeople} /><br />\r\n                    <select value={roleSelection} onChange={handleRoleSelectionChange} multiple={true}>\r\n                        {\r\n                            chooseRoles.map((role) => {\r\n                                role = findRoleById(roles, role)\r\n                                return <option key={role.id} value={role.id}>{role.abreviation}: {role.description}</option>\r\n                            })\r\n                        }\r\n                    </select>\r\n                    <select value={categorieSelection} onChange={handleCategorieSelectionChange}>\r\n                        {\r\n                            timeslotCategories.map((timeslotCategorie) => {\r\n                                return <option key={timeslotCategorie.id} value={timeslotCategorie.id}>{timeslotCategorie.title} minimum cancel times (hours): {timeslotCategorie.cancelLength}</option>\r\n                            })\r\n                        }\r\n                    </select>\r\n                    <input type=\"submit\" />\r\n                </form >\r\n            </div>\r\n        )\r\n    } else {\r\n        return <div>loading roles</div>\r\n    }\r\n}\r\n\r\nexport default TimeslotForm","import React from 'react';\r\nimport { Card, CardHeader, CardContent, Typography, CardActions, Button, Grid, List, ListItem, ListItemText, ButtonGroup } from '@material-ui/core';\r\nimport { subscribeTimeslot, unSubscribe, deleteTimeslot } from '../actions/timeslot';\r\nimport { formatDateForCard } from \"../utils/timeFormat\"\r\nimport { useDispatch } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nimport { checkRole, checkTimeslotCategorie } from '../utils/checkRole';\r\n\r\n\r\nfunction TimeslotCards({ timeslots, userRoles, categories, userId, roleList, sortingOption, token}) {\r\n    const dispatch = useDispatch()\r\n\r\n    const findRoleById = (rolesArray, roleId) => {\r\n        return rolesArray.filter(role => role.id === roleId)[0]\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            width: 400,\r\n            height: 200,\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const sortTimeslot = (timeslots, sortOption) => {\r\n        switch (sortOption) {\r\n            case \"startTime\":\r\n                return timeslots.sort((firstTimeslot, secondTimeslot) => {\r\n                    return new Date(firstTimeslot.startTime) - new Date(secondTimeslot.startTime)\r\n                })\r\n            case \"endTime\":\r\n                return timeslots.sort((firstTimeslot, secondTimeslot) => {\r\n                    return new Date(firstTimeslot.endTime) - new Date(secondTimeslot.endTime)\r\n                })\r\n            case \"usersRising\":\r\n                return timeslots.sort((firstTimeslot, secondTimeslot) => {\r\n                    return firstTimeslot.subscribed.length - secondTimeslot.subscribed.length\r\n                })\r\n            case \"usersDecreasing\":\r\n                return timeslots.sort((firstTimeslot, secondTimeslot) => {\r\n                    return secondTimeslot.subscribed.length - firstTimeslot.subscribed.length\r\n                })\r\n            default:\r\n                return timeslots.sort((firstTimeslot, secondTimeslot) => {\r\n                    return new Date(firstTimeslot.startTime) - new Date(secondTimeslot.startTime)\r\n                })\r\n        }\r\n    }\r\n\r\n    const sorted = sortTimeslot(timeslots, sortingOption)\r\n\r\n\r\n    return <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n    >\r\n        {sorted.map(timeslot => {\r\n            const startTimeDate = new Date(timeslot.startTime)\r\n            const endTimeDate = new Date(timeslot.endTime)\r\n\r\n            const returnElement =\r\n                <Card key={timeslot.id}>\r\n                    <CardHeader title={formatDateForCard(startTimeDate, endTimeDate)} subheader={checkTimeslotCategorie(categories, timeslot.timeslotCategorie).title}\r\n                        className={classes.root} />\r\n                    <CardContent>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} md={6}>\r\n                                <Typography variant=\"h6\" className={classes.title}>\r\n                                    Roles\r\n                            </Typography>\r\n                                <List dense={true}>\r\n                                    {timeslot.roles.map((roleId) => {\r\n                                        const role = findRoleById(roleList, roleId)\r\n\r\n                                        return <ListItem key={roleId}>\r\n                                            <ListItemText\r\n                                                primary={role.abreviation}\r\n                                            />\r\n                                        </ListItem>\r\n                                    })}\r\n                                </List>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <Typography variant=\"h6\" className={classes.title}>\r\n                                    Users\r\n                            </Typography>\r\n                                <List dense={true}>\r\n                                    {timeslot.subscribed.map((userId) => {\r\n\r\n                                        return <ListItem key={userId}>\r\n                                            <ListItemText\r\n                                                primary={userId}\r\n                                            />\r\n                                        </ListItem>\r\n                                    })}\r\n                                </List>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            {`${timeslot.subscribed.length}/${timeslot.maxPeople}`}<br />\r\n                        </Typography>\r\n\r\n                    </CardContent>\r\n\r\n                    <CardActions>\r\n                        <ButtonGroup>\r\n                            {console.log(timeslot.subscribed, userId)}\r\n                            {\r\n                            \r\n                                !timeslot.subscribed.includes(userId) ?\r\n                                    <Button onDoubleClick={() => dispatch(subscribeTimeslot(token, timeslot.id))} color=\"primary\">\r\n                                        Meld mij aan\r\n                            </Button> :\r\n                                    <Button onDoubleClick={() => dispatch(unSubscribe(token, timeslot.id))} color=\"secondary\">\r\n                                        unSubscribe\r\n                            </Button>\r\n                            }\r\n                            {checkRole(userRoles, \"createTimeslot\") ? <Button onDoubleClick={() => dispatch(deleteTimeslot(token, timeslot.id))} color=\"secondary\">\r\n                                delete\r\n                        </Button> : \"\"}\r\n                        </ButtonGroup>\r\n                    </CardActions>\r\n                </Card>\r\n\r\n            return returnElement\r\n        })}\r\n    </Grid>\r\n}\r\n\r\nexport default TimeslotCards","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getTimeslots } from '../actions/timeslot';\r\nimport { getRoleList } from '../actions/role';\r\n\r\n\r\nimport { errorCodeFormatting } from '../utils/errorCodeFormatting';\r\nimport { getUserInformation } from '../actions/user';\r\nimport { getTimeslotCategorieList } from '../actions/timeslotCategorie';\r\nimport TimeslotCards from \"./TimeslotCards\"\r\nimport { checkTimeslotCategorie } from '../utils/checkRole';\r\n\r\nfunction TimeslotList() {\r\n    const dispatch = useDispatch()\r\n\r\n\r\n\r\n    const timeslots = useSelector(state => state.timeslot.timeslots)\r\n    const roles = useSelector(state => state.roles)\r\n    const userInformation = useSelector(state => state.user)\r\n    const timeslotCategories = useSelector(state => state.timeslotCategorie.timeslotCategories)\r\n    const timeslotStatus = useSelector(state => state.timeslot)\r\n    const token = useSelector(state => state.login.token)\r\n\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            dispatch(getTimeslots(token))\r\n            dispatch(getRoleList(token))\r\n            dispatch(getUserInformation(token))\r\n            dispatch(getTimeslotCategorieList(token))\r\n        }\r\n    }, [dispatch, token])\r\n\r\n    const sortOptions = [\r\n        {\r\n            value: \"startTime\",\r\n            name: \"start tijd\"\r\n        },\r\n        {\r\n            value: \"endTime\",\r\n            name: \"eind tijd\"\r\n        },\r\n        {\r\n            value: \"usersRising\",\r\n            name: \"hoeveelheid aangemeld stijdend\"\r\n        },\r\n        {\r\n            value: \"usersDecreasing\",\r\n            name: \"hoeveelheid aangemeld dalend\"\r\n        }\r\n    ]\r\n\r\n    const [sortOption, setSortOption] = useState(sortOptions[0].value)\r\n\r\n    const onSelectSortChange = (event) => {\r\n        setSortOption(event.target.value)\r\n    }\r\n\r\n\r\n\r\n    const errorText = (errorCode, errorInfo = \"\") => {\r\n        switch (errorCode) {\r\n            case \"TIMESLOT_FULL\":\r\n                return \"time slot full please fuck off\"\r\n            case \"NO_VALID_ROLE\":\r\n                return \"you do not have the required role to subscribe to this timeslot please contact the moderator if you think this is an error.\"\r\n            case \"TIME_ERROR\":\r\n                return `The time to cancel your appointment has sadly passed contact the COMBAR in case you really can't tap you need to cancel atleast ${errorInfo} hours in advance`\r\n\r\n            default:\r\n                return <div></div>\r\n        }\r\n    }\r\n\r\n\r\n    var groupBy = function (xs, key) {\r\n        return xs.reduce(function (rv, x) {\r\n            (rv[x[key]] = rv[x[key]] || []).push(x);\r\n            return rv;\r\n        }, {});\r\n    };\r\n\r\n\r\n    if (timeslots && roles.length !== 0 && timeslotCategories.length !== 0 && userInformation.user) {\r\n        const groupedTimeslots = groupBy(timeslots, \"timeslotCategorie\")\r\n        return (\r\n            <div>\r\n                <select onChange={onSelectSortChange} value={sortOption}>\r\n                    {sortOptions.map((option) => {\r\n                        return <option key={option.value} value={option.value}>{option.name}</option>\r\n                    })}\r\n                </select>\r\n                {errorCodeFormatting(timeslotStatus.errorCode, errorText, timeslotStatus.errorInfo)}\r\n                {\r\n                    Object.keys(groupBy(timeslots, \"timeslotCategorie\")).map((categorie) => {\r\n                        return <div key={categorie}>\r\n                            <h2>{checkTimeslotCategorie(timeslotCategories, categorie).title}</h2>\r\n                            <TimeslotCards timeslots={groupedTimeslots[categorie]} userRoles={userInformation.roles} categories={timeslotCategories} userId={userInformation.user.id} roleList={roles} sortingOption={sortOption} token={token} />\r\n                        </div>\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n    return <div></div>\r\n}\r\n\r\nexport default TimeslotList","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getUserInformation } from \"../actions/user\"\r\nimport { Link } from 'react-router-dom';\r\nimport { checkRole} from \"../utils/checkRole\"\r\n\r\nimport \"../css/navbar.css\"\r\n\r\n\r\nfunction Navbar() {\r\n\r\n    const loginInformation = useSelector(state => state.login)\r\n\r\n\r\n    const userRoles = useSelector(state => state.user.roles)\r\n    const user = useSelector(state => state.user.user)\r\n    const token = useSelector(state => state.login.token)\r\n    const dispatch = useDispatch()\r\n\r\n    const loginOrLogout = (loggedIn) =>{\r\n        return loggedIn ? <Link to=\"/logout\" className={\"navbar_link\"}>logout</Link> : <Link to=\"/login\" className={\"navbar_link\"}>login</Link>\r\n    }\r\n\r\n\r\n    const moderatorLink = (userRoles) => {\r\n        if(checkRole(userRoles, \"userModerator\")) {\r\n            return <li className={\"navbar_list_element\"}><Link to=\"/moderator\" className={\"navbar_link\"}>moderator</Link></li>\r\n        }\r\n    }\r\n\r\n    const timeslotLink = (userRoles, chairman) => {\r\n        if(checkRole(userRoles, \"createTimeslot\") || (chairman && chairman.length !== 0)) {\r\n            return <li className={\"navbar_list_element\"}><Link to=\"/timeslot/create\" className={\"navbar_link\"}>create Timeslot</Link></li>\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            dispatch(getUserInformation(token))\r\n        }\r\n    }, [dispatch, token])\r\n\r\n\r\n    //renders only if there is userinformation\r\n    return (\r\n        <ul className={\"navbar_list\"}>\r\n            <li className={\"navbar_list_element\"}><Link to=\"/\" className={\"navbar_link\"}>home </Link></li>\r\n            <li className={\"navbar_log_element\"}> {loginOrLogout(loginInformation.loggedIn)} </li>\r\n            {loginInformation.loggedIn? moderatorLink(userRoles) : \"\"}\r\n            {loginInformation.loggedIn? user ? timeslotLink(userRoles, user.chairman) : \"\" : \"\"}\r\n            {loginInformation.loggedIn? <li className={\"navbar_list_element\"}><Link to=\"/timeslot\" className={\"navbar_link\"}>timeslots</Link></li> : \"\"}\r\n        </ul>\r\n    )\r\n\r\n\r\n\r\n}\r\n\r\nexport default Navbar","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { verifyToken, noTokenStorage} from \"./actions/login\"\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch, Route, Redirect\r\n} from \"react-router-dom\"\r\n\r\n//components\r\nimport LoginForm from \"./components/LoginForm\"\r\nimport User from \"./components/Moderator.js\"\r\nimport Logout from \"./components/Logout\"\r\nimport TimeslotForm from './components/TimeslotForm';\r\nimport TimeslotList from './components/TimeslotList';\r\nimport UserInformation from './components/UserInformation';\r\nimport Navbar from './components/Navbar';\r\n\r\n\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\")\r\n    if (token) {\r\n      dispatch(verifyToken(token))\r\n    } else {\r\n      dispatch(noTokenStorage())\r\n    }\r\n  }, [dispatch])\r\n\r\n  const loginInformation = useSelector(state => state.login)\r\n\r\n  //if no login state is fetched show this\r\n  if (loginInformation.pending) {\r\n    return \"pending....\"\r\n  }\r\n\r\n  console.log(\"Production is \", process.env.NODE_ENV)\r\n\r\n  return (\r\n      <Router>\r\n\r\n        <Navbar></Navbar>\r\n\r\n\r\n        <Switch>\r\n          <Route path=\"/login\" render={() =>\r\n            loginInformation.loggedIn ? <Redirect to=\"/\" /> : <LoginForm />\r\n          } />\r\n\r\n          <Route path=\"/timeslot/create\" render={() =>\r\n            loginInformation.loggedIn ? <TimeslotForm /> : <Redirect to=\"/login\" />\r\n          } />\r\n\r\n          <Route path=\"/timeslot\" render={() =>\r\n            loginInformation.loggedIn ? <TimeslotList /> : <Redirect to=\"/login\" />\r\n          } />\r\n\r\n          <Route path=\"/moderator\" render={() =>\r\n            loginInformation.loggedIn ? <User /> : <Redirect to=\"/login\" />\r\n          } />\r\n          <Route path=\"/logout\">\r\n            <Logout />\r\n          </Route>\r\n          <Route path=\"/\" render={() =>\r\n            loginInformation.loggedIn ? <UserInformation /> : <Redirect to=\"/login\" />\r\n          } />\r\n        </Switch>\r\n\r\n\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const defaultState = {\r\n    loggedIn: false,\r\n    pending: true\r\n}\r\n\r\n\r\nconst loginReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case \"LOGIN\":\r\n            return {\r\n                token: action.data.token,\r\n                loggedIn: true,\r\n                pending: false\r\n            }\r\n        case \"NO_TOKEN\":\r\n            return {\r\n                loggedIn: false,\r\n                pending: false\r\n            }\r\n        case \"LOGOUT\":\r\n            return {\r\n                loggedIn: false,\r\n                error: false,\r\n                pending: false\r\n            }\r\n        case \"LOGIN_ERROR\":\r\n            console.log(action.data)\r\n            return {\r\n                loggedIn: false,\r\n                error: true,\r\n                errorCode: action.data.errorCode,\r\n                pending: false\r\n            }\r\n        case \"SERVER_ERROR\":\r\n            return {\r\n                loggedIn: false,\r\n                error: true,\r\n                errorMessage: \"The server may be down, try again later or try to contract the moderator.\",\r\n                pending: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default loginReducer","const roleReducer = (state = [], action) => {\r\n    switch(action.type) {\r\n        case \"ADD_ROLE\" :\r\n            return state.concat(action.data.role)\r\n        case \"ROLE_LIST\" :\r\n            return action.data.roles\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default roleReducer","const defaultState = {\r\n    user: null,\r\n    role: []\r\n}\r\n\r\nconst userReducer = (state = defaultState, action) => {\r\n    switch(action.type) {\r\n        case \"USER_INFORMATION\":\r\n            const user = action.data.user\r\n            return {\r\n                user: {\r\n                    email: user.email,\r\n                    frontName: user.frontName,\r\n                    lastName: user.lastName,\r\n                    id: user.id,\r\n                    chairman: user.chairman\r\n                },\r\n                roles: user.roles\r\n            }\r\n        case \"LOGOUT\":\r\n            return {\r\n                user: null,\r\n                role: []\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default userReducer","const moderatorReducer = (state = [], action) => {\r\n    switch(action.type) {\r\n        case \"USERS_LIST\" :\r\n            return action.data.userList\r\n        case \"ADD_USER\": \r\n            return state.concat(action.data.user)\r\n        case \"TOGGLE_CHAIRMAN\":\r\n        case \"TOGGLE_ROLE\":\r\n            const newState = state.map(user => {\r\n                if(user.id === action.data.user.id) {\r\n                    return action.data.user\r\n                }\r\n                return user\r\n            })\r\n            console.log(newState)\r\n            return newState\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default moderatorReducer","\r\nconst defaultState = {\r\n    timeslots: [],\r\n    errorCode: \"\",\r\n    succes: false,\r\n    errorInfo: \"\"\r\n}\r\n\r\nconst timeslotReducer = (state = defaultState, action) => {\r\n    switch(action.type) {\r\n        case \"ADD_TIMESLOT\" :\r\n            return { \r\n                ...state,\r\n                timeslots: state.timeslots.concat(action.data.timeslot),\r\n                succes: true\r\n            }\r\n        case \"TIMESLOT_LIST\" :\r\n            return {\r\n                ...state,\r\n                timeslots: action.data.timeslots\r\n            }\r\n        case \"SUBSCRIBED_TIMESLOT\":\r\n            const newTimeslots = state.timeslots.map(timeslot => {\r\n                if(timeslot.id === action.data.timeslot.id) {\r\n                    return action.data.timeslot\r\n                }\r\n                return timeslot\r\n            })\r\n            return {\r\n                ...state,\r\n                timeslots: newTimeslots,\r\n                errorCode: \"\"\r\n            }\r\n        case \"DELETE_TIMESLOT\": \r\n            const newTimeslotsDeleted = state.timeslots.filter(timeslot => {\r\n                return timeslot.id !== action.data.timeslotId\r\n            })\r\n            return {\r\n                ...state,\r\n                timeslots: newTimeslotsDeleted,\r\n                errorCode: \"\"\r\n            }\r\n        case \"TIMESLOT_ERROR\":\r\n            return {\r\n                ...state,\r\n                errorCode: action.data.errorCode,\r\n                errorInfo: action.data.errorInfo\r\n            }\r\n        case \"RESET_SUCCES_TIMESLOT\" :\r\n            return {\r\n                ...state,\r\n                succes: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default timeslotReducer","\r\nconst defaultState = {\r\n    timeslotCategories: [],\r\n    errorCode: \"\",\r\n    succes: false\r\n}\r\n\r\nconst timeslotCategorieReducer = (state = defaultState, action) => {\r\n    switch(action.type) {\r\n        case \"ADD_TIMESLOT_CATEGORIE\" :\r\n            return { \r\n                ...state,\r\n                timeslotCategories: state.timeslotCategories.concat(action.data.timeslotCategorie),\r\n                succes: true\r\n            }            \r\n        case \"TIMESLOT_CATEGORIE_LIST\" :\r\n            return {\r\n                ...state,\r\n                timeslotCategories: action.data.timeslotCategories,\r\n            }\r\n\r\n        case \"TIMESLOT_CATEGORIE_ERROR\":\r\n            return {\r\n                ...state,\r\n                errorCode: action.data.errorCode\r\n            }\r\n        case \"RESET_SUCCES_TIMESLOT_CATEGORIE\" :\r\n            return {\r\n                ...state,\r\n                succes: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default timeslotCategorieReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\n\n\nimport loginReducer from './reducers/login'\nimport roleReducer from './reducers/role';\nimport userReducer from \"./reducers/user\"\nimport moderatorReducer from './reducers/moderator';\n\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport timeslotReducer from './reducers/timeslot';\nimport timeslotCategorieReducer from './reducers/timeslotCategorie';\n\nconst store = createStore(combineReducers({\n  login: loginReducer,\n  roles: roleReducer,\n  user: userReducer,\n  moderator: moderatorReducer,\n  timeslot: timeslotReducer,\n  timeslotCategorie: timeslotCategorieReducer\n}),\n  applyMiddleware(thunk)\n)\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}